{"version":3,"sources":["C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/$_gendir lazy","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/app.component.css","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/app.component.html","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/app.component.ts","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/app.module.ts","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/accountmgt/accountmgt-menu.component.html","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/accountmgt/accountmgt-menu.component.ts","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/administration/administration-menu.component.html","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/administration/administration-menu.component.ts","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/cargotypes/cargotype-list.component.html","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/cargotypes/cargotype-list.component.ts","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/cargotypes/cargotype.model.ts","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/collectiontype/collectiontype-list.component.html","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/collectiontype/collectiontype-list.component.ts","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/collectiontype/collectiontype.model.ts","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/customerprofile/customerprofile-list.component.html","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/customerprofile/customerprofile-list.component.ts","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/customerprofile/customerprofile.model.ts","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/home/home.component.html","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/home/home.component.ts","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/menu/menu-component.html","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/menu/menu.component.ts","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/paymenttype/paymenttype-list.component.html","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/paymenttype/paymenttype-list.component.ts","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/paymenttype/paymenttype.model.ts","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/shipmentmgt/shipmentmgt-menu.component.html","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/shipmentmgt/shipmentmgt-menu.component.ts","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/shipmenttype/shipmenttype.component.html","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/shipmenttype/shipmenttype.component.ts","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/shipmenttype/shipmenttype.model.ts","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/systembranch/systembranch-list.component.html","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/systembranch/systembranch-list.component.ts","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/systembranch/systembranch.model.ts","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/units/unit.model.ts","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/units/units-list.component.html","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/units/units-list.component.ts","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/useraccount/useraccount-list.component.html","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/useraccount/useraccount-list.component.ts","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/useraccount/useraccount.model.ts","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/userlevel/userlevel-list.component.html","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/userlevel/userlevel-list.component.ts","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/userlevel/userlevel.model.ts","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/userstatus/userstatus-list.component.html","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/userstatus/userstatus-list.component.ts","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/userstatus/userstatus.model.ts","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/environments/environment.ts","C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\treturn new Promise(function(resolve, reject) { reject(new Error(\"Cannot find module '\" + req + \"'.\")); });\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"\\r\\n\\r\\n<div class=\\\"nav-side-menu\\\" *ngIf=\\\"isLoggedIn\\\">\\r\\n  <menu-section></menu-section>\\r\\n</div>\\r\\n<div class=\\\"container\\\" id=\\\"main\\\" *ngIf=\\\"isLoggedIn\\\" style=\\\"padding: 12px; font-size: 15px !important;\\\">\\r\\n\\r\\n  <div class=\\\"row\\\" style=\\\"margin-bottom: 12px; padding-right: 12px !important;\\\">\\r\\n    <div class=\\\"dropdown pull-right\\\">\\r\\n      <button class=\\\"btn btn-lg btn-info btn-outline dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenu1\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"true\\\" style=\\\"font-size: 10px;\\\">\\r\\n        {{ account._lastname +' , '+account._firstname }}\\r\\n        <span class=\\\"caret\\\"></span>\\r\\n      </button>\\r\\n      <ul class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdownMenu1\\\">\\r\\n        <li><a >View Messages</a></li>\\r\\n        <li><a >Edit Profile</a></li>\\r\\n        <li><a >Change Password</a></li>\\r\\n        <li role=\\\"separator\\\" class=\\\"divider\\\"></li>\\r\\n        <li><a (click)=\\\"logout()\\\" >Sign Out</a></li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"panel panel-blue\\\">\\r\\n    <div class=\\\"panel-heading\\\">\\r\\n     \\r\\n    </div>\\r\\n    <div class=\\\"panel-body\\\">\\r\\n      <router-outlet></router-outlet>\\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n</div>\\r\\n\\r\\n  <div style=\\\"width: 100%; height: 100vh; background-color:rgba(0,0,0,0.4);\\\">\\r\\n    <div class=\\\"container\\\" *ngIf=\\\"!isLoggedIn\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"centered\\\" style=\\\"width: 350px; height: 500px; padding: 20px; background-image:url('/assets/bg.jpg'); color: white;\\\">\\r\\n          <div class=\\\"panel panel-default\\\"  style=\\\"text-align: center; background: none;\\\">\\r\\n            <div style=\\\"text-align: center\\\">\\r\\n              <img src=\\\"/assets/logo.png\\\" />\\r\\n            </div>\\r\\n            <h1 class=\\\"changefont\\\" style=\\\"font-size: 50px;\\\">JCS</h1>\\r\\n            Shipments &amp; Billing  Management Sytem\\r\\n            <br/>\\r\\n            <br/>\\r\\n            <div class=\\\"form\\\" style=\\\"padding: 10%; padding-top:0; text-align:left;font-size: smaller; background-color:rgba(255,255,255,0.4); color: black;\\\">\\r\\n              <br/>\\r\\n              <div class=\\\"row\\\" *ngIf=\\\"(errorMsg != '')\\\">\\r\\n                <div class=\\\"alert alert-warning alert-dismissible\\\" role=\\\"alert\\\">\\r\\n                  {{ errorMsg }}\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\" *ngIf=\\\"(account._passwordReset != 'True')\\\">\\r\\n                <label>\\r\\n                  Username\\r\\n                </label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"account._userLogin\\\">\\r\\n              </div>\\r\\n              <div class=\\\"row\\\" *ngIf=\\\"(account._passwordReset != 'True')\\\">\\r\\n                <label>\\r\\n                  Password\\r\\n                </label>\\r\\n                <input type=\\\"password\\\" [(ngModel)]=\\\"account._userAccessKey\\\" class=\\\"form-control\\\">\\r\\n              </div>\\r\\n               <div class=\\\"row\\\" *ngIf=\\\"(account._passwordReset == 'True')\\\">\\r\\n                <label>\\r\\n                  New Password\\r\\n                </label>\\r\\n                <input type=\\\"password\\\" [(ngModel)]=\\\"account._userAccessKey\\\" class=\\\"form-control\\\">\\r\\n              </div>\\r\\n              <div class=\\\"row\\\" *ngIf=\\\"(account._passwordReset == 'True')\\\">\\r\\n                <label>\\r\\n                  COnfirm Password\\r\\n                </label>\\r\\n                <input type=\\\"password\\\" [(ngModel)]=\\\"confirmPassword\\\" (change)=\\\"confirmPass()\\\" class=\\\"form-control\\\">\\r\\n              </div>\\r\\n              <div class=\\\"row\\\">\\r\\n                <br />\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-success btn-circle\\\" style=\\\"width: 100%; border-radius: 300px;\\\" (click)=\\\"login()\\\" *ngIf=\\\"(account._passwordReset != 'True')\\\">Login</button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-success btn-circle\\\" style=\\\"width: 100%; border-radius: 300px;\\\" (click)=\\\"updatePass()\\\" *ngIf=\\\"(account._passwordReset == 'True')\\\">Update Password</button>\\r\\n                \\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { UserAccount } from './components/useraccount/useraccount.model';\r\nimport { HttpHeaders } from \"@angular/common/http\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport $ from 'jquery';\r\n\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit, AfterViewInit {\r\n    public menu: string;\r\n    public account: UserAccount;\r\n    public errorMsg: string;\r\n    public isLoggedIn: boolean;\r\n    public loadingState: boolean;\r\n    public confirmPassword: string;\r\n\r\n    constructor(private _httpService: HttpClient) {\r\n\r\n    }\r\n\r\n\r\n    ngAfterViewInit() {\r\n        $('.ui.dropdown').dropdown();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.menu = 'home';\r\n        this.checkSession();\r\n        this.account = new UserAccount();\r\n        this.errorMsg = '';\r\n    }\r\n\r\n    checkSession() {\r\n        this.isLoggedIn = false;\r\n        this._httpService.post('/api/User/LoggedIn', null, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'), responseType: 'text'\r\n        }).subscribe(values => {\r\n            console.log(values);\r\n            if (values == 'True') { this.isLoggedIn = true; } else { this.isLoggedIn = false; }\r\n            this.loadingState = false;\r\n        });\r\n    }\r\n\r\n    confirmPass() {\r\n        if (this.account._userAccessKey == this.confirmPassword) {\r\n            this.errorMsg = '';\r\n        } else {\r\n            this.errorMsg = 'Passwords do not match';\r\n        }\r\n    }\r\n\r\n    login() {\r\n        if (this.account._userAccessKey.trim() == \"\") {\r\n            this.errorMsg = \"Please enter password.\"\r\n        } else if (this.account._userLogin.trim() == \"\") {\r\n            this.errorMsg = \"Please enter username.\"\r\n        } else {\r\n            this.loadingState = true;\r\n            const body = JSON.stringify(this.account);\r\n            let header = new HttpHeaders();\r\n           \r\n            this._httpService.post('/api/User/Login', body, {\r\n                headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8')\r\n            }).subscribe(values => {\r\n\r\n                this.account = values as UserAccount;\r\n                if (this.account._userAccountID == \"Invalid Username/Password\") {\r\n                    this.errorMsg = this.account._userAccountID;\r\n                    this.loadingState = false;\r\n                } else\r\n                    if (this.account._passwordReset == \"True\") {\r\n                        this.errorMsg = \"Your current password is system generated. Please change password and login again.\";\r\n                        this.account._userAccessKey = '';\r\n                        this.confirmPassword = '';\r\n                        this.loadingState = false;\r\n                    } else {\r\n                        this.checkSession();\r\n                    }\r\n\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n    updatePass()\r\n    {\r\n        this.account._passwordReset = \"0\";\r\n        const body = JSON.stringify(this.account);\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/administration/UserAccount/Edit', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'), responseType: 'text'\r\n        }).subscribe(values => { this.login(); });\r\n    }\r\n    logout()\r\n    {\r\n        const body = JSON.stringify(this.account);\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/User/Logout', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'), responseType: 'text'\r\n        }).subscribe(values => { this.checkSession(); });\r\n    }\r\n\r\n    reset()\r\n    {\r\n        this.account = new UserAccount();\r\n        this.errorMsg = '';\r\n    }\r\n\r\n    setMenu(menuclick: string)\r\n    {\r\n        this.menu = menuclick;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppComponent } from './app.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from \"@angular/router\";\r\n\r\n\r\nimport { CollectionTypeComponent } from './components/collectiontype/collectiontype-list.component';\r\nimport { PaymentTypeComponent } from './components/paymenttype/paymenttype-list.component';\r\nimport { UserStatusComponent } from './components/userstatus/userstatus-list.component';\r\nimport { SystemBranchComponent } from './components/systembranch/systembranch-list.component';\r\nimport { UserLevelComponent } from './components/userlevel/userlevel-list.component';\r\nimport { UserAccountComponent } from './components/useraccount/useraccount-list.component';\r\nimport { AdministrationComponent } from './components/administration/administration-menu.component';\r\nimport { ShipmentTypeComponent } from './components/shipmenttype/shipmenttype.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { AccountMgtComponent } from './components/accountmgt/accountmgt-menu.component';\r\nimport { ShipmentMgtComponent } from './components/shipmentmgt/shipmentmgt-menu.component';\r\nimport { CustomerAccountComponent } from './components/customerprofile/customerprofile-list.component';\r\nimport { MenuComponent } from './components/menu/menu.component';\r\nimport { UnitComponent } from './components/units/units-list.component';\r\nimport { CargoTypeComponent } from './components/cargotypes/cargotype-list.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n      AppComponent,\r\n      CollectionTypeComponent,\r\n      PaymentTypeComponent,\r\n      UserStatusComponent,\r\n      SystemBranchComponent,\r\n      UserLevelComponent,\r\n      UserAccountComponent,\r\n      AdministrationComponent,\r\n      ShipmentTypeComponent,\r\n      HomeComponent,\r\n      AccountMgtComponent,\r\n      ShipmentMgtComponent,\r\n      CustomerAccountComponent,\r\n      MenuComponent,\r\n      CargoTypeComponent,\r\n      UnitComponent\r\n  ],\r\n  imports: [\r\n      BrowserModule,\r\n      FormsModule,\r\n      HttpModule,\r\n      HttpClientModule,\r\n      RouterModule.forRoot([\r\n          {\r\n              path: '',\r\n              redirectTo: 'home',\r\n              pathMatch: 'full'\r\n          },\r\n          {\r\n              path: 'home',\r\n              component: HomeComponent\r\n          },\r\n          {\r\n              path: 'administration',\r\n              component: AdministrationComponent\r\n          },\r\n          {\r\n              path: 'administration/:menuid',\r\n              component: AdministrationComponent\r\n          },\r\n          {\r\n              path: 'customeraccounts',\r\n              component: AccountMgtComponent\r\n          },\r\n          {\r\n              path: 'customeraccounts/:menuid',\r\n              component: AccountMgtComponent\r\n          },\r\n          {\r\n              path: 'shipments',\r\n              component: ShipmentMgtComponent\r\n          },\r\n          {\r\n              path: 'shipments/:menuid',\r\n              component: ShipmentMgtComponent\r\n          }\r\n      ])\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/app.module.ts","module.exports = \"<div class=\\\"ui stackable grid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"segment\\\">\\r\\n      <customer-type-main *ngIf=\\\"(menu=='profiles')\\\"></customer-type-main>\\r\\n  \\r\\n    </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/accountmgt/accountmgt-menu.component.html\n// module id = ../../../../../src/app/components/accountmgt/accountmgt-menu.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from \"@angular/router\";\r\n\r\n\r\n@Component({\r\n    selector: 'accountmgt',\r\n    templateUrl: './accountmgt-menu.component.html'\r\n})\r\nexport class AccountMgtComponent implements OnInit{\r\n     menu: string;\r\n    private sub: any;\r\n\r\n    constructor(private route: ActivatedRoute) { }\r\n    ngOnInit() {\r\n        \r\n        this.sub = this.route.params.subscribe(params => {\r\n            this.menu = params['menuid'] as string; \r\n        });\r\n    }\r\n\r\n   \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/accountmgt/accountmgt-menu.component.ts","module.exports = \"\\r\\n\\r\\n  <div class=\\\"row\\\" style=\\\"padding: 12px;\\\">\\r\\n    <div>\\r\\n      <div class=\\\"segment\\\">\\r\\n        <useraccount-type-main *ngIf=\\\"(menu=='users')\\\"></useraccount-type-main>\\r\\n        <userlevel-type-main *ngIf=\\\"(menu=='userlevels')\\\"></userlevel-type-main>\\r\\n        <userstatus-type-main *ngIf=\\\"(menu=='userstatus')\\\"></userstatus-type-main>\\r\\n        <systembranch-type-main *ngIf=\\\"(menu=='branches')\\\"></systembranch-type-main>\\r\\n        <collection-type-main *ngIf=\\\"(menu=='collectiontype')\\\"></collection-type-main>\\r\\n        <payment-type-main *ngIf=\\\"(menu=='paymenttype')\\\"></payment-type-main>\\r\\n        <cargo-type *ngIf=\\\"(menu=='cargotypes')\\\"></cargo-type>\\r\\n        <units-list *ngIf=\\\"(menu=='units')\\\"></units-list>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/administration/administration-menu.component.html\n// module id = ../../../../../src/app/components/administration/administration-menu.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from \"@angular/router\";\r\n\r\n\r\n@Component({\r\n    selector: 'administration',\r\n    templateUrl: './administration-menu.component.html'\r\n})\r\nexport class AdministrationComponent implements OnInit{\r\n     menu: string;\r\n    private sub: any;\r\n\r\n    constructor(private route: ActivatedRoute) { }\r\n    ngOnInit() {\r\n        \r\n        this.sub = this.route.params.subscribe(params => {\r\n            this.menu = params['menuid'] as string; \r\n        });\r\n    }\r\n\r\n   \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/administration/administration-menu.component.ts","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n    <div class=\\\"row\\\"><h2><label class=\\\"label label-primary\\\">Cargo Types</label></h2></div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"(errMessage != '')\\\">\\r\\n      <div class=\\\"alert alert-warning alert-dismissible\\\" role=\\\"alert\\\">\\r\\n        {{ errMessage }}\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"col-md-4 pull-right well\\\" style=\\\"margin-right: 10px;margin-left: 10px;\\\">\\r\\n    <div class=\\\"input-group\\\">\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchkey\\\" placeholder=\\\"Search for...\\\">\\r\\n      <span class=\\\"input-group-btn\\\">\\r\\n        <button class=\\\"btn btn-primary\\\" onclick=\\\"$('#cargotypeModal').modal('show');\\\" (click)=\\\"newSelect()\\\">+</button>\\r\\n        <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"search()\\\">Search!</button>\\r\\n      </span>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n<hr />\\r\\n<div class=\\\"well\\\">\\r\\n  <div class=\\\"table-responsive table-striped\\\">\\r\\n    <table class=\\\"table\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th></th>\\r\\n          <th>Code</th>\\r\\n          <th>Name</th>\\r\\n          <th>Descrption</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let cargo of apiValues\\\">\\r\\n          <td><button (click)=\\\"viewThis(cargo)\\\" onclick=\\\"$('#cargotypeModal').modal('show');\\\"><i class=\\\"glyphicon glyphicon-edit\\\"></i></button></td>\\r\\n          <td>{{ cargo._cargoCode }}</td>\\r\\n           <td>{{ cargo._cargoName }}</td>\\r\\n          <td>{{ cargo._cargoDescription }}</td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"cargotypeModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\">\\r\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <h3><span class=\\\"label label-default\\\">Cargo Type</span></h3>\\r\\n        </div>\\r\\n        <div class=\\\"well\\\">\\r\\n          <div class=\\\"ui grid\\\">\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <label>Code</label>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedModel._cargoCode\\\" />\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <label>Name</label>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedModel._cargoName\\\" />\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <label>Description</label>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedModel._cargoDescription\\\" />\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"updateCargoType()\\\" data-dismiss=\\\"modal\\\" *ngIf=\\\"selectedModel._cargoID != 'New'\\\">\\r\\n          Save changes\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"addPCargoType()\\\" data-dismiss=\\\"modal\\\" *ngIf=\\\"selectedModel._cargoID === 'New'\\\">\\r\\n          Create New\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/cargotypes/cargotype-list.component.html\n// module id = ../../../../../src/app/components/cargotypes/cargotype-list.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { CargoType } from './cargotype.model';\r\n\r\n\r\n@Component({\r\n    selector: 'cargo-type',\r\n    templateUrl: './cargotype-list.component.html'\r\n})\r\nexport class CargoTypeComponent implements OnInit{\r\n    public selectedModel: CargoType;\r\n    public apiValues: CargoType[] = [];\r\n    constructor(private _httpService: HttpClient) { }\r\n    public errMessage: string;\r\n\r\n\r\n    ngOnInit() {\r\n        this.refreshCollectionTypes();\r\n        this.errMessage = '';\r\n    }\r\n\r\n    public searchkey: string;\r\n\r\n    search() {\r\n        const body = JSON.stringify(this.searchkey);\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/Administration/CargoType/List', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'),\r\n        }).subscribe(values => {\r\n            this.apiValues = values as CargoType[];\r\n        });\r\n    }\r\n\r\n    refreshCollectionTypes()\r\n    {\r\n        this.newSelect();\r\n        const body = JSON.stringify('');\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/Administration/CargoType/List', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'),\r\n        }).subscribe(values => {\r\n            this.apiValues = values as CargoType[];\r\n        });\r\n    }\r\n    \r\n    searchCollectionTypes(searchkey : string)\r\n    {\r\n        const body = JSON.stringify(searchkey);\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/Administration/CargoType/List', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'),\r\n        }).subscribe(values => {\r\n            this.apiValues = values as CargoType[];\r\n        });\r\n    }\r\n\r\n    viewThis(model: CargoType) {\r\n        this.selectedModel = model;\r\n    }\r\n\r\n    newSelect() {\r\n        this.selectedModel = new CargoType();\r\n        this.selectedModel._cargoID = 'New';\r\n        this.selectedModel._cargoCode = '';\r\n        this.selectedModel._cargoName = '';\r\n        this.selectedModel._cargoDescription = '0';\r\n    }\r\n\r\n    updateCargoType()\r\n    {\r\n        \r\n        const body = JSON.stringify(this.selectedModel);\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/Administration/CargoType/Edit', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'), responseType: 'text'\r\n        }).subscribe(values => {\r\n            if (values != 'OK') { \r\n                this.errMessage = values;\r\n            }\r\n            this.refreshCollectionTypes();\r\n        });\r\n    }\r\n\r\n    addPCargoType() {\r\n        const body = JSON.stringify(this.selectedModel);\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/Administration/CargoType/New', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'), responseType: 'text'\r\n        }).subscribe(values => {\r\n            if (values != 'Ok')\r\n            {\r\n                this.errMessage = values;\r\n            }\r\n           \r\n            this.refreshCollectionTypes();\r\n        });\r\n    }\r\n    \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/cargotypes/cargotype-list.component.ts","\r\nexport class CargoType {\r\n    _cargoID: string;\r\n    _cargoCode: string;\r\n    _cargoName: string;\r\n    _cargoDescription: string;\r\n   \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/cargotypes/cargotype.model.ts","module.exports = \"\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n    <div class=\\\"row\\\"><h2><label class=\\\"label label-primary\\\">Collection Types</label></h2></div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"(errMessage != '')\\\">\\r\\n      <div class=\\\"alert alert-warning alert-dismissible\\\" role=\\\"alert\\\">\\r\\n        {{ errMessage }}\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"col-md-4 pull-right well\\\" style=\\\"margin-right: 10px;margin-left: 10px;\\\">\\r\\n    <div class=\\\"input-group\\\">\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchkey\\\" placeholder=\\\"Search for...\\\">\\r\\n      <span class=\\\"input-group-btn\\\">\\r\\n        <button class=\\\"btn btn-primary\\\" onclick=\\\"$('#collectiontypeModal').modal('show');\\\" (click)=\\\"newSelect()\\\">+</button>\\r\\n        <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"search()\\\">Search!</button>\\r\\n      </span>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n<hr />\\r\\n<div class=\\\"well\\\">\\r\\n  <div class=\\\"table-responsive table-striped\\\">\\r\\n    <table class=\\\"table\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th></th>\\r\\n          <th>Name</th>\\r\\n          <th>Descrption</th>\\r\\n          <th>Billed To</th>\\r\\n          <th style=\\\"text-align:center\\\">Collectable Account</th>\\r\\n          <th style=\\\"text-align:center\\\">Collect On Delivery</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let collectionType of apiValues\\\">\\r\\n          <td><button (click)=\\\"viewThis(collectionType)\\\" onclick=\\\"$('#collectiontypeModal').modal('show');\\\"><i class=\\\"glyphicon glyphicon-edit\\\"></i></button></td>\\r\\n          <td>{{ collectionType._ctDisplayName }}</td>\\r\\n          <td>{{ collectionType._ctDescription }}</td>\\r\\n          <td>\\r\\n            <i *ngIf=\\\"(collectionType._ctBilledTo.indexOf('0') > -1);then content_true_else else content_false_else\\\">\\r\\n            </i>\\r\\n            <ng-template #content_true_else>Shipper</ng-template>\\r\\n            <ng-template #content_false_else>Consignee</ng-template>\\r\\n          </td>\\r\\n          <td style=\\\"text-align:center\\\">\\r\\n            <i *ngIf=\\\"(collectionType._collectableFlag.indexOf('0') > -1);then content_true else content_false\\\">\\r\\n            </i>\\r\\n            <ng-template #content_true></ng-template>\\r\\n            <ng-template #content_false><i class=\\\"glyphicon glyphicon-check\\\"></i></ng-template>\\r\\n          </td>\\r\\n          <td style=\\\"text-align:center\\\">\\r\\n            <i *ngIf=\\\"(collectionType._collectOnDeliveryFlag.indexOf('0') > -1);then content_true else content_false\\\">\\r\\n            </i>\\r\\n            <ng-template #content_true></ng-template>\\r\\n            <ng-template #content_false><i class=\\\"glyphicon glyphicon-check\\\"></i></ng-template>\\r\\n          </td>\\r\\n\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"collectiontypeModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\">\\r\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <h3><span class=\\\"label label-default\\\">User Level</span></h3>\\r\\n        </div>\\r\\n        <div class=\\\"well\\\">\\r\\n          <div class=\\\"ui grid\\\">\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <label>Name</label>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedModel._ctDisplayName\\\" />\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <label>Description</label>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedModel._ctDescription\\\" />\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <label>Bill to: </label>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n               \\r\\n                <select class=\\\"form-control\\\" [(ngModel)]=\\\"selectedModel._ctBilledTo\\\">\\r\\n                  <option value=\\\"0\\\">Shipper</option>\\r\\n                  <option value=\\\"1\\\">Consignee</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <label>Collectable Account: </label>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <select class=\\\"form-control\\\" [(ngModel)]=\\\"selectedModel._collectableFlag\\\">\\r\\n                  <option value=\\\"0\\\">No</option>\\r\\n                  <option value=\\\"1\\\">Yes</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n             \\r\\n              \\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <label>Collect on Delivery: </label>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                \\r\\n                <select class=\\\"form-control\\\" [(ngModel)]=\\\"selectedModel._collectOnDeliveryFlag\\\">\\r\\n                  <option value=\\\"0\\\">No</option>\\r\\n                  <option value=\\\"1\\\">Yes</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"updateCollectionType()\\\" data-dismiss=\\\"modal\\\" *ngIf=\\\"selectedModel._collectionTypeCode != 'New'\\\">\\r\\n          Save changes\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"addCollectionType()\\\" data-dismiss=\\\"modal\\\" *ngIf=\\\"selectedModel._collectionTypeCode === 'New'\\\">\\r\\n          Create New\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/collectiontype/collectiontype-list.component.html\n// module id = ../../../../../src/app/components/collectiontype/collectiontype-list.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { CollectionType } from './collectiontype.model'\r\n\r\n\r\n@Component({\r\n    selector: 'collection-type-main',\r\n    templateUrl: './collectiontype-list.component.html'\r\n})\r\nexport class CollectionTypeComponent implements OnInit{\r\n    public selectedModel: CollectionType;\r\n    public apiValues: CollectionType[] = [];\r\n    constructor(private _httpService: HttpClient) { }\r\n    public errMessage: string;\r\n\r\n\r\n    ngOnInit() {\r\n        this.refreshCollectionTypes();\r\n        this.errMessage = '';\r\n    }\r\n    public searchkey: string;\r\n\r\n    search() {\r\n        const body = JSON.stringify(this.searchkey);\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/Administration/CollectionType/List', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'),\r\n        }).subscribe(values => {\r\n            this.apiValues = values as CollectionType[];\r\n        });\r\n    }\r\n\r\n    refreshCollectionTypes()\r\n    {\r\n        this.newSelect();\r\n        const body = JSON.stringify('');\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/Administration/CollectionType/List', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'),\r\n        }).subscribe(values => {\r\n            this.apiValues = values as CollectionType[];\r\n        });\r\n    }\r\n    \r\n    searchCollectionTypes(searchkey : string)\r\n    {\r\n        const body = JSON.stringify(searchkey);\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/Administration/CollectionType/List', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'),\r\n        }).subscribe(values => {\r\n            this.apiValues = values as CollectionType[];\r\n        });\r\n    }\r\n\r\n    viewThis(model: CollectionType) {\r\n        this.selectedModel = model;\r\n    }\r\n\r\n    newSelect()\r\n    {\r\n        this.selectedModel = new CollectionType();\r\n        this.selectedModel._collectionTypeCode = 'New';\r\n        this.selectedModel._ctDisplayName = '';\r\n        this.selectedModel._collectableFlag = '0';\r\n        this.selectedModel._collectOnDeliveryFlag = '0';\r\n        this.selectedModel._ctBilledTo = '0';\r\n    }\r\n\r\n    updateCollectionType()\r\n    {\r\n        \r\n        const body = JSON.stringify(this.selectedModel);\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/Administration/CollectionType/Edit', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'), responseType: 'text'\r\n        }).subscribe(values => {\r\n            if (values != 'Ok') {\r\n                this.errMessage = values;\r\n            }\r\n\r\n            this.refreshCollectionTypes();\r\n        });\r\n    }\r\n\r\n    addCollectionType() {\r\n        const body = JSON.stringify(this.selectedModel);\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/Administration/CollectionType/New', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'), responseType: 'text'\r\n        }).subscribe(values => {\r\n            if (values != 'Ok')\r\n            {\r\n                this.errMessage = values;\r\n            }\r\n            \r\n            this.refreshCollectionTypes();\r\n        });\r\n    }\r\n    \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/collectiontype/collectiontype-list.component.ts","\r\nexport class CollectionType {\r\n    _collectionTypeCode: string;\r\n    _ctDisplayName: string;\r\n    _ctDescription: string;\r\n    _ctBilledTo: string;\r\n    _collectableFlag: string;\r\n    _collectOnDeliveryFlag: string;\r\n    _addedBy: string;\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/collectiontype/collectiontype.model.ts","module.exports = \"\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n    <div class=\\\"input-group\\\">\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"(errMessage != '')\\\">\\r\\n        <div class=\\\"alert alert-warning alert-dismissible\\\" role=\\\"alert\\\">\\r\\n          {{ errMessage }}\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-4 pull-right\\\">\\r\\n    <div class=\\\"input-group\\\">\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchkey\\\" placeholder=\\\"Search for...\\\">\\r\\n      <span class=\\\"input-group-btn\\\">\\r\\n        <button class=\\\"btn btn-primary\\\" onclick=\\\"$('#customerAccountModal').modal('show');\\\" (click)=\\\"newSelect()\\\">+</button>\\r\\n\\r\\n        <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"search()\\\">Search!</button>\\r\\n      </span>\\r\\n    </div><!-- /input-group -->\\r\\n  </div><!-- /.col-lg-6 -->\\r\\n \\r\\n</div>\\r\\n<div class=\\\"row\\\" style=\\\"padding: 12px;\\\">\\r\\n    <div class=\\\"col-sm-6 col-md-4\\\"  *ngFor=\\\"let customeraccount of apiValues\\\" style=\\\"padding: 20px;\\\">\\r\\n      <div class=\\\"card\\\" style=\\\"box-shadow: 5px 5px 10px;\\\">\\r\\n        <div class=\\\"caption\\\" style=\\\"background-color: white;height:140px; padding: 12px; border: 1px solid #808080;\\\">\\r\\n          <p style=\\\"font-size: 16px; text-decoration: underline;\\\"><label class=\\\"label label-default\\\" style=\\\"font-size:larger;\\\">{{ customeraccount._lastname }}, {{ customeraccount._firstname }} </label> <span *ngIf=\\\"(customeraccount._company != '' && customeraccount._company!=  null)\\\"> ( {{ customeraccount._company }} )</span></p>\\r\\n          <p style=\\\"font-size: 14px;\\\">Phone: {{ customeraccount._businessPhone}}</p>\\r\\n          <p style=\\\"font-size: 14px;\\\">Address: {{ customeraccount._address}}</p>\\r\\n          <div class=\\\"btn-group pull-right\\\" role=\\\"group\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" onclick=\\\"$('#customerAccountModal').modal('show');\\\" (click)=\\\"viewThis(customeraccount)\\\">Edit</button>\\r\\n         \\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"modal fade\\\" id=\\\"customerAccountModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\">\\r\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n     <div class=\\\"modal-body\\\">\\r\\n       <div class=\\\"well\\\">\\r\\n         <div class=\\\"ui grid\\\">\\r\\n           <div>\\r\\n             <div class=\\\"row\\\">\\r\\n               <h3><span class=\\\"label label-default\\\">Customer Account</span></h3>\\r\\n             </div>\\r\\n             <hr />\\r\\n             <div class=\\\"row\\\">\\r\\n               <h4><span class=\\\"label label-default\\\">Customer Details</span></h4>\\r\\n             </div>\\r\\n             <div class=\\\"row\\\">\\r\\n               <div class=\\\"col-md-4\\\">\\r\\n                 <label>First Name</label>\\r\\n                 <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedModel._firstname\\\">\\r\\n               </div>\\r\\n               <div class=\\\"col-md-4\\\">\\r\\n                 <label>Middle Name</label>\\r\\n                 <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedModel._middlename\\\">\\r\\n               </div>\\r\\n               <div class=\\\"col-md-4\\\">\\r\\n                 <label>Last Name</label>\\r\\n                 <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedModel._lastname\\\">\\r\\n               </div>\\r\\n             </div>\\r\\n             <div class=\\\"row\\\">\\r\\n               <div class=\\\"col-md-4\\\">\\r\\n                 <label>Email:</label>\\r\\n                 <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedModel._email\\\">\\r\\n               </div>\\r\\n               <div class=\\\"col-md-8\\\">\\r\\n                 <label>Address</label>\\r\\n                 <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedModel._address\\\">\\r\\n               </div>\\r\\n\\r\\n\\r\\n             </div>\\r\\n             <div class=\\\"row\\\">\\r\\n               <div class=\\\"col-md-8\\\">\\r\\n                 <label>Company </label>\\r\\n                 <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedModel._company\\\">\\r\\n               </div>\\r\\n               <div class=\\\"col-md-4\\\">\\r\\n                 <label>Business Phone No.:</label>\\r\\n                 <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedModel._businessPhone\\\">\\r\\n               </div>\\r\\n\\r\\n             </div>\\r\\n           </div>\\r\\n           <hr/>\\r\\n           <div class=\\\"row\\\">\\r\\n             <h4><span class=\\\"label label-default\\\">Account Details</span></h4>\\r\\n           </div>\\r\\n           <div class=\\\"row\\\">\\r\\n             <div class=\\\"col-md-8\\\">\\r\\n               <label>Account Number</label>\\r\\n               <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedModel._accountNumber\\\">\\r\\n             </div>\\r\\n             \\r\\n\\r\\n           </div>\\r\\n           <div class=\\\"row\\\">\\r\\n             <div class=\\\"col-md-4\\\">\\r\\n               <label>Closest Branch</label>\\r\\n               <select class=\\\"form-control\\\" [(ngModel)]=\\\"selectedModel._closestBranch\\\">\\r\\n                 <option *ngFor=\\\"let branch of branchValues\\\" [ngValue]=\\\"branch._branchID\\\">{{branch._branchName}}</option>\\r\\n               </select>\\r\\n\\r\\n             </div>\\r\\n             <div class=\\\"col-md-4\\\">\\r\\n               <label>Priority Client</label>\\r\\n               <select class=\\\"form-control\\\" [(ngModel)]=\\\"selectedModel._isVIP\\\">\\r\\n                 <option value=\\\"1\\\">Yes</option>\\r\\n                 <option value=\\\"0\\\">No</option>\\r\\n               </select>\\r\\n\\r\\n             </div>\\r\\n             \\r\\n           </div>\\r\\n\\r\\n         </div>\\r\\n       </div>\\r\\n     </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"updateCustomerAccount()\\\" data-dismiss=\\\"modal\\\" *ngIf=\\\"selectedModel._customerID != 'New'\\\">\\r\\n            Save changes\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"addCustomerAccount()\\\" data-dismiss=\\\"modal\\\" *ngIf=\\\"selectedModel._customerID === 'New'\\\">\\r\\n            Create New User\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/customerprofile/customerprofile-list.component.html\n// module id = ../../../../../src/app/components/customerprofile/customerprofile-list.component.html\n// module chunks = main","import { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { CustomerAccount } from './customerprofile.model';\r\nimport { SystemBranch } from '../systembranch/systembranch.model';\r\nimport { UserLevel } from '../userlevel/userlevel.model';\r\nimport { UserStatus } from '../userstatus/userstatus.model';\r\n\r\nimport $ from 'jquery';\r\n\r\n\r\n@Component({\r\n    selector: 'customer-type-main',\r\n    templateUrl: './customerprofile-list.component.html'\r\n})\r\nexport class CustomerAccountComponent implements OnInit, AfterViewInit{\r\n    public selectedModel: CustomerAccount;\r\n    public apiValues: CustomerAccount[] = [];\r\n    public branchValues: SystemBranch[] = [];\r\n     \r\n\r\n    constructor(private _httpService: HttpClient) { }\r\n    public errMessage: string;\r\n    \r\n    ngOnInit() {\r\n        this.refreshCollectionTypes();\r\n        this.loadCollectionTypes();\r\n        this.newSelect();\r\n        this.errMessage = '';\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        $('.ui.dropdown').dropdown();\r\n    }\r\n\r\n\r\n    public searchkey: string;\r\n\r\n    search()\r\n    {\r\n        const body = JSON.stringify(this.searchkey);\r\n        let header = new HttpHeaders();\r\n\r\n        this._httpService.post('/api/customer/CustomerProfile/List', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'),\r\n        }).subscribe(values => {\r\n            this.apiValues = values as CustomerAccount[];\r\n            console.log(this.apiValues);\r\n        });\r\n    }\r\n\r\n    loadCollectionTypes()\r\n    {\r\n        \r\n        const body = JSON.stringify('');\r\n        let header = new HttpHeaders();\r\n\r\n        this._httpService.post('/api/Administration/SystemBranch/List', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'),\r\n        }).subscribe(values => {\r\n            this.branchValues = values as SystemBranch[];\r\n        });\r\n        \r\n    }\r\n\r\n    refreshCollectionTypes()\r\n    {\r\n        const body = JSON.stringify('');\r\n        let header = new HttpHeaders();\r\n        \r\n        this._httpService.post('/api/customer/CustomerProfile/List', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'),\r\n        }).subscribe(values => {\r\n            this.apiValues = values as CustomerAccount[];\r\n            console.log(this.apiValues);\r\n          });\r\n\r\n    }\r\n    \r\n    searchCollectionTypes(searchkey : string)\r\n    {\r\n        const body = JSON.stringify(searchkey);\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/customer/CustomerProfile/List', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'),\r\n        }).subscribe(values => {\r\n            this.apiValues = values as CustomerAccount[];\r\n        });\r\n    }\r\n\r\n    viewThis(model: CustomerAccount) {\r\n        this.selectedModel = model;\r\n    \r\n    }\r\n\r\n \r\n    newSelect()\r\n    {\r\n        this.selectedModel = new CustomerAccount();\r\n        this.selectedModel._customerID = 'New';\r\n        this.selectedModel._firstname = '';\r\n        this.selectedModel._middlename = '';\r\n        this.selectedModel._lastname = '';\r\n        this.selectedModel._address = '';\r\n        this.selectedModel._email = '';\r\n        this.selectedModel._company = '';\r\n        this.selectedModel._phoneNumber = '';\r\n        this.selectedModel._isVIP = '0';\r\n        this.selectedModel._businessPhone = '';\r\n        this.selectedModel._accountNumber = '';\r\n     \r\n        if (this.branchValues.length > 0)\r\n        {\r\n            this.selectedModel._closestBranch = this.branchValues[0]._branchID;\r\n\r\n        }\r\n      \r\n       \r\n    }\r\n\r\n    updateCustomerAccount()\r\n    {\r\n        \r\n        const body = JSON.stringify(this.selectedModel);\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/customer/CustomerProfile/Edit', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'),\r\n        }).subscribe(values => {\r\n            this.errMessage = values as string;\r\n            this.refreshCollectionTypes();\r\n        });\r\n    }\r\n\r\n   \r\n    addCustomerAccount() {\r\n        const body = JSON.stringify(this.selectedModel);\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/customer/CustomerProfile/New', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'), responseType: 'text'\r\n        }).subscribe(values => {\r\n\r\n            this.errMessage = values;\r\n            this.refreshCollectionTypes();\r\n        });\r\n    }\r\n    \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/customerprofile/customerprofile-list.component.ts","\r\nexport class CustomerAccount\r\n{\r\n        _customerID: string;\r\n        _firstname: string;\r\n        _middlename: string;\r\n        _lastname: string;\r\n        _address: string;\r\n        _company: string;\r\n        _closestBranch: string;\r\n        _phoneNumber: string;\r\n        _businessPhone: string;\r\n        _email: string;\r\n        _isVIP: string;\r\n        _accountNumber: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/customerprofile/customerprofile.model.ts","module.exports = \"<div class=\\\"ui grid\\\">\\r\\n  <div class=\\\"column\\\">\\r\\n    <div>&nbsp;</div>\\r\\n  </div>\\r\\n<div class=\\\" four wide column\\\">\\r\\n  <div class=\\\"ui small feed\\\">\\r\\n    <h4 class=\\\"ui header\\\">Branch Activity</h4>\\r\\n    <div class=\\\"event\\\">\\r\\n      <div class=\\\"content\\\">\\r\\n        <div class=\\\"summary\\\">\\r\\n         <p>Currently no recorded activity for this Branch</p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    \\r\\n  </div>\\r\\n</div>\\r\\n  <div class=\\\"column\\\">\\r\\n    <div>&nbsp;</div>\\r\\n  </div>\\r\\n  <div class=\\\" four wide column\\\" >\\r\\n    <div class=\\\"ui small feed\\\">\\r\\n      <h4 class=\\\"ui header\\\">Announcement</h4>\\r\\n      <div class=\\\"event\\\">\\r\\n        <div class=\\\"content\\\">\\r\\n          <div class=\\\"summary\\\">\\r\\n            <p>Currently no Announcements</p>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\" four wide column\\\">\\r\\n    <h4 class=\\\"ui horizontal divider header\\\">\\r\\n      <i class=\\\"tag icon\\\"></i>\\r\\n      Quick Access Menus\\r\\n    </h4>\\r\\n    <div style=\\\"width: 100%; margin: auto;\\\">\\r\\n      <div class=\\\"ui vertical menu\\\" style=\\\"width: 100%;\\\">\\r\\n\\r\\n        <a class=\\\"item\\\" style=\\\"width: 100%;\\\">\\r\\n          Missing Items\\r\\n          <div class=\\\"ui green label\\\">0</div>\\r\\n        </a>\\r\\n        <a class=\\\"item\\\" style=\\\"width: 100%;\\\">\\r\\n          For Checking\\r\\n          <div class=\\\"ui green label\\\">0</div>\\r\\n        </a>\\r\\n        <a class=\\\"item\\\"  style=\\\"width: 100%;\\\">\\r\\n          For Approval\\r\\n          <div class=\\\"ui green label\\\">0</div>\\r\\n        </a>\\r\\n        <div class=\\\"item\\\"  style=\\\"width: 100%;\\\">\\r\\n          <div class=\\\"ui transparent icon input\\\">\\r\\n            <input type=\\\"text\\\" placeholder=\\\"Search Delivery Tracking No.\\\">\\r\\n            <i class=\\\"search icon\\\"></i>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/home/home.component.html\n// module id = ../../../../../src/app/components/home/home.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { HttpHeaders } from \"@angular/common/http\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n\r\n@Component({\r\n    selector: 'home',\r\n    templateUrl: './home.component.html'\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  \r\n    constructor(private _httpService: HttpClient) {\r\n\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n       \r\n    }\r\n    \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/home/home.component.ts","module.exports = \"\\r\\n  <div class=\\\"brand\\\">Jades Cargo Services</div>\\r\\n  <i class=\\\"glyphicon glyphicon-align-justify toggle-btn\\\" style=\\\"font-size: 25px;\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#menu-content\\\"></i>\\r\\n  <div class=\\\"menu-list\\\">\\r\\n    <ul id=\\\"menu-content\\\" class=\\\"menu-content collapse out\\\">\\r\\n      <li  class=\\\" item\\\" [routerLink]=\\\"['/home']\\\" routerLinkActive=\\\"active\\\">\\r\\n          Dashboard\\r\\n      </li>\\r\\n      <li data-toggle=\\\"collapse\\\" data-target=\\\"#administration\\\" class=\\\"collapsed\\\">\\r\\n        <a >Administration</a>\\r\\n      </li>\\r\\n      <ul class=\\\"sub-menu collapse\\\" id=\\\"administration\\\">\\r\\n        <li  class=\\\" item\\\" [routerLink]=\\\"['/administration','users']\\\" routerLinkActive=\\\"active\\\">\\r\\n            Users\\r\\n       \\r\\n        </li>\\r\\n        <li  class=\\\" item\\\" [routerLink]=\\\"['/administration','userlevels']\\\" routerLinkActive=\\\"active\\\">\\r\\n            User Level\\r\\n       \\r\\n        </li>\\r\\n        <li  class=\\\" item\\\" [routerLink]=\\\"['/administration','userstatus']\\\" routerLinkActive=\\\"active\\\">\\r\\n            User Status\\r\\n         \\r\\n        </li>\\r\\n        <li  [routerLink]=\\\"['/administration','branches']\\\" routerLinkActive=\\\"active\\\">\\r\\n            Branches\\r\\n        \\r\\n        </li>\\r\\n        <li  [routerLink]=\\\"['/administration','collectiontype']\\\" routerLinkActive=\\\"active\\\">\\r\\n            Collection Type\\r\\n      \\r\\n        </li>\\r\\n        <li [routerLink]=\\\"['/administration','paymenttype']\\\" routerLinkActive=\\\"active\\\">\\r\\n            Payment Type\\r\\n         \\r\\n        </li>\\r\\n        <li [routerLink]=\\\"['/administration','units']\\\" routerLinkActive=\\\"active\\\">\\r\\n            Item Units\\r\\n        </li>\\r\\n        <li [routerLink]=\\\"['/administration','cargotypes']\\\" routerLinkActive=\\\"active\\\">\\r\\n            Cargo Types\\r\\n        </li>\\r\\n      \\r\\n      </ul>\\r\\n      <li data-toggle=\\\"collapse\\\" data-target=\\\"#new\\\" class=\\\"collapsed\\\">\\r\\n        <a> Customer Accounts</a>\\r\\n      </li>\\r\\n      <ul class=\\\"sub-menu collapse\\\" id=\\\"new\\\">\\r\\n        <li [routerLink]=\\\"['/customeraccounts','profiles']\\\" routerLinkActive=\\\"active\\\">\\r\\n            Manage Accounts\\r\\n        </li>\\r\\n        <li>Statement of Accounts</li>\\r\\n        <li>Payments</li>\\r\\n      </ul>\\r\\n      <li data-toggle=\\\"collapse\\\" data-target=\\\"#airService\\\" class=\\\"collapsed\\\">\\r\\n        <a>Air Services</a>\\r\\n      </li>\\r\\n      <ul class=\\\"sub-menu collapse\\\" id=\\\"airService\\\">\\r\\n        <li>Air Shipments</li>\\r\\n        <li>Air Collectibles</li>\\r\\n        <li>Adjust Rates</li>\\r\\n      </ul>\\r\\n      <li data-toggle=\\\"collapse\\\" data-target=\\\"#seaLandService\\\" class=\\\"collapsed\\\">\\r\\n        <a>Sea/Land Services</a>\\r\\n      </li>\\r\\n      <ul class=\\\"sub-menu collapse\\\" id=\\\"seaLandService\\\">\\r\\n        <li>Sea/Land Shipments</li>\\r\\n        <li>Shipment Collectibles</li>\\r\\n        <li>Sea/Land Rates(per Route)</li>\\r\\n      </ul>\\r\\n      \\r\\n    </ul>\\r\\n  </div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/menu/menu-component.html\n// module id = ../../../../../src/app/components/menu/menu-component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from \"@angular/router\";\r\n\r\n\r\n@Component({\r\n    selector: 'menu-section',\r\n    templateUrl: './menu-component.html'\r\n})\r\nexport class MenuComponent implements OnInit{\r\n     menu: string;\r\n    private sub: any;\r\n\r\n    constructor(private route: ActivatedRoute) { }\r\n\r\n    ngOnInit() {\r\n        \r\n    }\r\n\r\n   \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/menu/menu.component.ts","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n    <div class=\\\"row\\\"><h2><label class=\\\"label label-primary\\\">Payment Types</label></h2></div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"(errMessage != '')\\\">\\r\\n      <div class=\\\"alert alert-warning alert-dismissible\\\" role=\\\"alert\\\">\\r\\n        {{ errMessage }}\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"col-md-4 pull-right well\\\" style=\\\"margin-right: 10px;margin-left: 10px;\\\">\\r\\n    <div class=\\\"input-group\\\">\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchkey\\\" placeholder=\\\"Search for...\\\">\\r\\n      <span class=\\\"input-group-btn\\\">\\r\\n        <button class=\\\"btn btn-primary\\\" onclick=\\\"$('#paymenttypeModal').modal('show');\\\" (click)=\\\"newSelect()\\\">+</button>\\r\\n        <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"search()\\\">Search!</button>\\r\\n      </span>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n<hr />\\r\\n<div class=\\\"well\\\">\\r\\n  <div class=\\\"table-responsive table-striped\\\">\\r\\n    <table class=\\\"table\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th></th>\\r\\n          <th>Name</th>\\r\\n          <th>Descrption</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let PaymentType of apiValues\\\">\\r\\n          <td><button (click)=\\\"viewThis(PaymentType)\\\" onclick=\\\"$('#paymenttypeModal').modal('show');\\\"><i class=\\\"glyphicon glyphicon-edit\\\"></i></button></td>\\r\\n           <td>{{ PaymentType._ptDisplayName }}</td>\\r\\n          <td>{{ PaymentType._ptDescription }}</td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"paymenttypeModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\">\\r\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <h3><span class=\\\"label label-default\\\">User Level</span></h3>\\r\\n        </div>\\r\\n        <div class=\\\"well\\\">\\r\\n          <div class=\\\"ui grid\\\">\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <label>Name</label>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedModel._ptDisplayName\\\" />\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <label>Description</label>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedModel._ptDescription\\\" />\\r\\n              </div>\\r\\n            </div>\\r\\n           \\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"updatePaymentType()\\\" data-dismiss=\\\"modal\\\" *ngIf=\\\"selectedModel._paymentTypeCode != 'New'\\\">\\r\\n          Save changes\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"addPaymentType()\\\" data-dismiss=\\\"modal\\\" *ngIf=\\\"selectedModel._paymentTypeCode === 'New'\\\">\\r\\n          Create New\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/paymenttype/paymenttype-list.component.html\n// module id = ../../../../../src/app/components/paymenttype/paymenttype-list.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { PaymentType } from './paymenttype.model'\r\n\r\n\r\n@Component({\r\n    selector: 'payment-type-main',\r\n    templateUrl: './paymenttype-list.component.html'\r\n})\r\nexport class PaymentTypeComponent implements OnInit{\r\n    public selectedModel: PaymentType;\r\n    public apiValues: PaymentType[] = [];\r\n    constructor(private _httpService: HttpClient) { }\r\n    public errMessage: string;\r\n\r\n\r\n    ngOnInit() {\r\n        this.refreshCollectionTypes();\r\n        this.errMessage = '';\r\n    }\r\n\r\n    public searchkey: string;\r\n\r\n    search() {\r\n        const body = JSON.stringify(this.searchkey);\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/Administration/PaymentType/List', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'),\r\n        }).subscribe(values => {\r\n            this.apiValues = values as PaymentType[];\r\n        });\r\n    }\r\n\r\n    refreshCollectionTypes()\r\n    {\r\n        this.newSelect();\r\n        const body = JSON.stringify('');\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/Administration/PaymentType/List', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'),\r\n        }).subscribe(values => {\r\n            this.apiValues = values as PaymentType[];\r\n        });\r\n    }\r\n    \r\n    searchCollectionTypes(searchkey : string)\r\n    {\r\n        const body = JSON.stringify(searchkey);\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/Administration/PaymentType/List', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'),\r\n        }).subscribe(values => {\r\n            this.apiValues = values as PaymentType[];\r\n        });\r\n    }\r\n\r\n    viewThis(model: PaymentType) {\r\n        this.selectedModel = model;\r\n    }\r\n\r\n    newSelect() {\r\n        this.selectedModel = new PaymentType();\r\n        this.selectedModel._paymentTypeCode = 'New';\r\n        this.selectedModel._ptDisplayName = '';\r\n        this.selectedModel._ptDescription = '';\r\n        this.selectedModel._checkFlag = '0';\r\n    }\r\n\r\n    updatePaymentType()\r\n    {\r\n        \r\n        const body = JSON.stringify(this.selectedModel);\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/Administration/PaymentType/Edit', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'), responseType: 'text'\r\n        }).subscribe(values => {\r\n            if (values != 'OK') {\r\n                this.errMessage = values;\r\n            }\r\n            this.refreshCollectionTypes();\r\n        });\r\n    }\r\n\r\n    addPaymentType() {\r\n        const body = JSON.stringify(this.selectedModel);\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/Administration/PaymentType/New', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'), responseType: 'text'\r\n        }).subscribe(values => {\r\n            if (values != 'Ok')\r\n            {\r\n                this.errMessage = values;\r\n            }\r\n           \r\n            this.refreshCollectionTypes();\r\n        });\r\n    }\r\n    \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/paymenttype/paymenttype-list.component.ts","\r\nexport class PaymentType {\r\n    _paymentTypeCode: string;\r\n    _ptDisplayName: string;\r\n    _ptDescription: string;\r\n    _checkFlag: string;\r\n    _addedBy: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/paymenttype/paymenttype.model.ts","module.exports = \"<div class=\\\"ui stackable grid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"three wide column\\\">\\r\\n      <div class=\\\"ui secondary vertical pointing menu\\\" style=\\\"margin: auto;\\\">\\r\\n        <a class=\\\" item\\\"  [routerLink]=\\\"['/customeraccounts','management']\\\" routerLinkActive=\\\"active\\\" style=\\\"width: 100%;\\\">\\r\\n          Air Shipments\\r\\n        </a>\\r\\n        <a class=\\\" item\\\"  [routerLink]=\\\"['/customeraccounts','transactions']\\\"  routerLinkActive=\\\"active\\\"  style=\\\"width: 100%;\\\">\\r\\n          Sea Shipment\\r\\n        </a>\\r\\n        <a class=\\\" item\\\" [routerLink]=\\\"['/customeraccounts','transactions']\\\" routerLinkActive=\\\"active\\\" style=\\\"width: 100%;\\\">\\r\\n          Sea Shipment\\r\\n        </a>\\r\\n        <a class=\\\" item\\\" [routerLink]=\\\"['/customeraccounts','transactions']\\\" routerLinkActive=\\\"active\\\" style=\\\"width: 100%;\\\">\\r\\n          Sea Rates per Route\\r\\n        </a>\\r\\n        <a class=\\\" item\\\" [routerLink]=\\\"['/customeraccounts','transactions']\\\" routerLinkActive=\\\"active\\\" style=\\\"width: 100%;\\\">\\r\\n          Standard Air Fees\\r\\n        </a>\\r\\n        <a class=\\\" item\\\" [routerLink]=\\\"['/customeraccounts','transactions']\\\" routerLinkActive=\\\"active\\\" style=\\\"width: 100%;\\\">\\r\\n          Cargo Weight Class\\r\\n        </a>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"ten wide column\\\">\\r\\n      <div class=\\\"segment\\\">\\r\\n       </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/shipmentmgt/shipmentmgt-menu.component.html\n// module id = ../../../../../src/app/components/shipmentmgt/shipmentmgt-menu.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from \"@angular/router\";\r\n\r\n\r\n@Component({\r\n    selector: 'shipmentmgt',\r\n    templateUrl: './shipmentmgt-menu.component.html'\r\n})\r\nexport class ShipmentMgtComponent implements OnInit{\r\n     menu: string;\r\n    private sub: any;\r\n\r\n    constructor(private route: ActivatedRoute) { }\r\n    ngOnInit() {\r\n        \r\n        this.sub = this.route.params.subscribe(params => {\r\n            this.menu = params['menuid'] as string; \r\n        });\r\n    }\r\n\r\n   \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/shipmentmgt/shipmentmgt-menu.component.ts","module.exports = \"<div class=\\\"ui segment\\\">\\r\\n  <div class=\\\"ui form\\\">\\r\\n    <h4 class=\\\"ui dividing header\\\">User Accounts</h4>\\r\\n    <div class=\\\"ui message\\\" *ngIf=\\\"(errMessage != '' && errMessage != null)\\\">\\r\\n      <i class=\\\"close icon\\\" (click)=\\\"errMessage = '';\\\"></i>\\r\\n      <div class=\\\"header\\\">\\r\\n        {{ errMessage }}\\r\\n      </div>\\r\\n      <p>&nbsp;</p>\\r\\n    </div>\\r\\n    <div class=\\\"field\\\">\\r\\n      <div class=\\\"two fields\\\">\\r\\n        <div class=\\\"field\\\">\\r\\n          <div class=\\\"ui action input\\\">\\r\\n            <input type=\\\"text\\\" placeholder=\\\"Enter search terms here..\\\" [(ngModel)]=\\\"searchkey\\\">\\r\\n            <button class=\\\"ui button\\\" (click)=\\\"search()\\\">Search</button>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"field\\\">\\r\\n          <div class=\\\"ui teal button\\\" onclick=\\\"$('#paymenttypeModal').modal('show');\\\" (click)=\\\"newSelect()\\\">New</div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div class=\\\"ui segment\\\">\\r\\n    <div class=\\\"ui divided items\\\">\\r\\n      <div class=\\\"small item\\\" *ngFor=\\\"let shipmenttype of apiValues\\\">\\r\\n        <div class=\\\"content\\\">\\r\\n          <a class=\\\"header\\\">\\r\\n            \\r\\n            <span class=\\\"ui button\\\" onclick=\\\"$('#shipmentTypeModal').modal('show');\\\" (click)=\\\"viewThis(shipmenttype)\\\">\\r\\n              <i class=\\\"edit icon\\\"></i>\\r\\n            </span>\\r\\n            <span style=\\\"width: 100px;\\\">\\r\\n              <span class=\\\"ui label\\\" *ngIf=\\\"(shipmenttype._isTransaction == 'True')\\\">Transaction</span>\\r\\n              <span class=\\\"ui label\\\" *ngIf=\\\"(shipmenttype._isTransaction != 'True')\\\">Internal&nbsp;&nbsp;&nbsp;&nbsp;</span>\\r\\n            </span>\\r\\n            &nbsp;&nbsp;&nbsp;\\r\\n            {{ shipmenttype._description }}   \\r\\n            \\r\\n          </a>\\r\\n         </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div class=\\\"ui modal\\\" id=\\\"shipmentTypeModal\\\">\\r\\n  <i class=\\\"close icon\\\"></i>\\r\\n  <div class=\\\"content\\\">\\r\\n    <div class=\\\"ui form\\\">\\r\\n      <h4 class=\\\"ui dividing header\\\">Shipment Type Information</h4>\\r\\n      <div class=\\\"field\\\">\\r\\n        <div class=\\\"two fields\\\">\\r\\n          <div class=\\\"field\\\">\\r\\n            <label>Description</label>\\r\\n            <input [(ngModel)]=\\\"selectedModel._description\\\" placeholder=\\\"\\\" />\\r\\n          </div>\\r\\n          <div class=\\\"field\\\" style=\\\"margin: auto;\\\">\\r\\n            <label>is Transaction</label>\\r\\n            <input type=\\\"checkbox\\\" (checked)=\\\"isTransactionFlag\\\" [(ngModel)]=\\\"isTransactionFlag\\\" (click)=\\\"changeTransactionFlag()\\\" />\\r\\n          </div>\\r\\n         \\r\\n        </div>\\r\\n      </div>\\r\\n     \\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"actions\\\">\\r\\n    <div class=\\\"ui positive right labeled icon button\\\" (click)=\\\"addUserAccount()\\\" *ngIf=\\\"(this.selectedModel._shipmentType == '0')\\\">\\r\\n      Add\\r\\n      <i class=\\\"checkmark icon\\\"></i>\\r\\n    </div>\\r\\n    <div class=\\\"ui positive right labeled icon button\\\" (click)=\\\"updateUserAccount()\\\" *ngIf=\\\"(this.selectedModel._shipmentType != '0')\\\">\\r\\n      Save\\r\\n      <i class=\\\"checkmark icon\\\"></i>\\r\\n    </div>\\r\\n    <div class=\\\"ui red deny button\\\">\\r\\n      Remove\\r\\n    </div>\\r\\n    <div class=\\\"ui black deny button\\\">\\r\\n      Cancel\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/shipmenttype/shipmenttype.component.html\n// module id = ../../../../../src/app/components/shipmenttype/shipmenttype.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { ShipmentType } from './shipmenttype.model';\r\n\r\n\r\n@Component({\r\n    selector: 'shipment-type-main',\r\n    templateUrl: './shipmenttype.component.html'\r\n})\r\nexport class ShipmentTypeComponent implements OnInit {\r\n    public selectedModel: ShipmentType;\r\n    public apiValues: ShipmentType[] = [];\r\n    public errMessage: string;\r\n    public isTransactionFlag: boolean;\r\n\r\n    constructor(private _httpService: HttpClient) { }\r\n   \r\n\r\n\r\n    ngOnInit() {\r\n        this.refreshCollectionTypes();\r\n        this.selectedModel = new ShipmentType();\r\n        this.errMessage = '';\r\n        this.isTransactionFlag = false;\r\n    }\r\n\r\n    public searchkey: string;\r\n\r\n    search() {\r\n        const body = JSON.stringify(this.searchkey);\r\n        let header = new HttpHeaders();\r\n\r\n        this._httpService.post('/api/Administration/ShipmentType/List', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'),\r\n        }).subscribe(values => {\r\n            this.apiValues = values as ShipmentType[];\r\n            console.log(this.apiValues);\r\n        });\r\n    }\r\n\r\n    refreshCollectionTypes() {\r\n        const body = JSON.stringify('');\r\n        let header = new HttpHeaders();\r\n\r\n        this._httpService.post('/api/Administration/ShipmentType/List', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'),\r\n        }).subscribe(values => {\r\n            this.apiValues = values as ShipmentType[];\r\n            console.log(this.apiValues);\r\n        });\r\n\r\n    }\r\n\r\n    searchCollectionTypes(searchkey: string) {\r\n        const body = JSON.stringify(searchkey);\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/Administration/ShipmentType/List', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'),\r\n        }).subscribe(values => {\r\n            this.apiValues = values as ShipmentType[];\r\n        });\r\n    }\r\n\r\n    viewThis(model: ShipmentType) {\r\n        console.log(model);\r\n        this.isTransactionFlag = (model._isTransaction.toLowerCase()=='true');\r\n        console.log(Boolean(model._isTransaction.toLowerCase()));\r\n        this.selectedModel = model;\r\n    }\r\n\r\n    newSelect() {\r\n        this.selectedModel._shipmentType = '0';\r\n        this.selectedModel._description = '';\r\n        this.selectedModel._isTransaction = 'False';\r\n    }\r\n\r\n    updateUserAccount() {\r\n        this.selectedModel._isTransaction = String(this.isTransactionFlag);\r\n        const body = JSON.stringify(this.selectedModel);\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/Administration/ShipmentType/Edit', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'),\r\n        }).subscribe(values => {\r\n            this.errMessage = values as string;\r\n            this.refreshCollectionTypes();\r\n        });\r\n    }\r\n\r\n  \r\n\r\n    changeTransactionFlag()\r\n    {\r\n        this.isTransactionFlag = !this.isTransactionFlag;\r\n    }\r\n\r\n    addUserAccount() {\r\n        this.selectedModel._isTransaction = String(this.isTransactionFlag);\r\n        const body = JSON.stringify(this.selectedModel);\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/Administration/ShipmentType/New', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'), responseType: 'text'\r\n        }).subscribe(values => {\r\n\r\n            this.errMessage = values;\r\n            this.refreshCollectionTypes();\r\n        });\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/shipmenttype/shipmenttype.component.ts","\r\nexport class ShipmentType {\r\n    _shipmentType: string;\r\n    _description: string;\r\n    _isTransaction: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/shipmenttype/shipmenttype.model.ts","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n    <div class=\\\"row\\\"><h2><label class=\\\"label label-primary\\\">Branches </label></h2></div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"(errMessage != '')\\\">\\r\\n      <div class=\\\"alert alert-warning alert-dismissible\\\" role=\\\"alert\\\">\\r\\n        {{ errMessage }}\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"col-md-4 pull-right well\\\" style=\\\"margin-right: 10px;margin-left: 10px;\\\">\\r\\n    <div class=\\\"input-group\\\">\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchkey\\\" placeholder=\\\"Search for...\\\">\\r\\n      <span class=\\\"input-group-btn\\\">\\r\\n        <button class=\\\"btn btn-primary\\\" onclick=\\\"$('#branchModal').modal('show');\\\" (click)=\\\"newSelect()\\\">+</button>\\r\\n        <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"search()\\\">Search!</button>\\r\\n      </span>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n<hr />\\r\\n<div class=\\\"well\\\">\\r\\n  <div class=\\\"table-responsive table-striped\\\">\\r\\n    <table class=\\\"table\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th></th>\\r\\n          <th>Name</th>\\r\\n          <th>Short Code</th>\\r\\n          <th>Parent Branch</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let branch of apiValues\\\">\\r\\n          <td><button (click)=\\\"viewThis(branch)\\\" onclick=\\\"$('#branchModal').modal('show');\\\"><i class=\\\"glyphicon glyphicon-edit\\\"></i></button></td>\\r\\n          <td>{{ branch._branchName  }}</td>\\r\\n          <td>{{ branch._shortCode }}</td>\\r\\n          <td>\\r\\n            <select style=\\\"background:none; border: none;\\\" [(ngModel)]=\\\"branch._parentBranch\\\" disabled>\\r\\n              <option *ngFor=\\\"let parentbranch of apiValues\\\" [ngValue]=\\\"parentbranch._branchID\\\">{{parentbranch._branchName}}</option>\\r\\n            </select>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"branchModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\">\\r\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <h3><span class=\\\"label label-default\\\">User Status</span></h3>\\r\\n        </div>\\r\\n        <div class=\\\"well\\\">\\r\\n          <div class=\\\"ui grid\\\">\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <label>Name</label>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedModel._branchName\\\" />\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <label>Short Code</label>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedModel._shortCode\\\" />\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <label>Parent Branch</label>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <select class=\\\"form-control\\\" [(ngModel)]=\\\"selectedModel._parentBranch\\\">\\r\\n                  <option *ngFor=\\\"let parentbranch of apiValues\\\" [ngValue]=\\\"parentbranch._branchID\\\">{{parentbranch._branchName}}</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"updateSystemBranch()\\\" data-dismiss=\\\"modal\\\" *ngIf=\\\"selectedModel._branchID != 'New'\\\">\\r\\n          Save changes\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"addSystemBranch()\\\" data-dismiss=\\\"modal\\\" *ngIf=\\\"selectedModel._branchID === 'New'\\\">\\r\\n          Create New \\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/systembranch/systembranch-list.component.html\n// module id = ../../../../../src/app/components/systembranch/systembranch-list.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { SystemBranch } from './systembranch.model';\r\n\r\n\r\n@Component({\r\n    selector: 'systembranch-type-main',\r\n    templateUrl: './systembranch-list.component.html'\r\n})\r\nexport class SystemBranchComponent implements OnInit{\r\n    public selectedModel: SystemBranch;\r\n    public apiValues: SystemBranch[] = [];\r\n    constructor(private _httpService: HttpClient) { }\r\n    public errMessage: string;\r\n\r\n\r\n    ngOnInit() {\r\n        this.refreshCollectionTypes();\r\n        this.errMessage = '';\r\n    }\r\n    public searchkey: string;\r\n\r\n    search() {\r\n        const body = JSON.stringify(this.searchkey);\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/Administration/SystemBranch/List', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'),\r\n        }).subscribe(values => {\r\n            this.apiValues = values as SystemBranch[];\r\n        });\r\n    }\r\n\r\n    refreshCollectionTypes()\r\n    {\r\n        this.newSelect();\r\n        const body = JSON.stringify('');\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/Administration/SystemBranch/List', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'),\r\n        }).subscribe(values => {\r\n            this.apiValues = values as SystemBranch[];\r\n        });\r\n    }\r\n    \r\n    searchCollectionTypes(searchkey : string)\r\n    {\r\n        const body = JSON.stringify(searchkey);\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/Administration/SystemBranch/List', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'),\r\n        }).subscribe(values => {\r\n            this.apiValues = values as SystemBranch[];\r\n        });\r\n    }\r\n\r\n    viewThis(model: SystemBranch) {\r\n        this.selectedModel = model;\r\n    }\r\n\r\n    newSelect()\r\n    {\r\n        this.selectedModel = new SystemBranch();\r\n        this.selectedModel._branchID = 'New';\r\n        this.selectedModel._branchName = '';\r\n        this.selectedModel._manager = '0';\r\n        this.selectedModel._parentBranch = '0';\r\n        this.selectedModel._routeDisplay = '';\r\n        this.selectedModel._shortCode = '';\r\n    }\r\n\r\n    updateSystemBranch()\r\n    {\r\n        \r\n        const body = JSON.stringify(this.selectedModel);\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/Administration/SystemBranch/Edit', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'), responseType: 'text'\r\n        }).subscribe(values => {\r\n            if (values != 'Ok')\r\n            {\r\n                this.errMessage = values;\r\n            }\r\n            \r\n            this.refreshCollectionTypes();\r\n        });\r\n    }\r\n\r\n    addSystemBranch() {\r\n        const body = JSON.stringify(this.selectedModel);\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/Administration/SystemBranch/New', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'), responseType: 'text'\r\n        }).subscribe(values => {\r\n            if (values != 'Ok') {\r\n                this.errMessage = values;\r\n            }\r\n            this.refreshCollectionTypes();\r\n        });\r\n    }\r\n    \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/systembranch/systembranch-list.component.ts","\r\nexport class SystemBranch {\r\n    _branchID: string;\r\n    _branchName: string;\r\n    _parentBranch: string;\r\n    _routeDisplay: string;\r\n    _shortCode: string;\r\n    _manager: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/systembranch/systembranch.model.ts","\r\nexport class Unit {\r\n    _unitCode: string;\r\n    _unitName: string;\r\n    _unitDescription: string;\r\n }\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/units/unit.model.ts","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n    <div class=\\\"row\\\"><h2><label class=\\\"label label-primary\\\">Item Units</label></h2></div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"(errMessage != '')\\\">\\r\\n      <div class=\\\"alert alert-warning alert-dismissible\\\" role=\\\"alert\\\">\\r\\n        {{ errMessage }}\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"col-md-4 pull-right well\\\" style=\\\"margin-right: 10px;margin-left: 10px;\\\">\\r\\n    <div class=\\\"input-group\\\">\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchkey\\\" placeholder=\\\"Search for...\\\">\\r\\n      <span class=\\\"input-group-btn\\\">\\r\\n        <button class=\\\"btn btn-primary\\\" onclick=\\\"$('#unitModal').modal('show');\\\" (click)=\\\"newSelect()\\\">+</button>\\r\\n        <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"search()\\\">Search!</button>\\r\\n      </span>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n<hr />\\r\\n<div class=\\\"well\\\">\\r\\n  <div class=\\\"table-responsive table-striped\\\">\\r\\n    <table class=\\\"table\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th></th>\\r\\n          <th>Name</th>\\r\\n          <th>Descrption</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let unit of apiValues\\\">\\r\\n          <td><button (click)=\\\"viewThis(unit)\\\" onclick=\\\"$('#unitModal').modal('show');\\\"><i class=\\\"glyphicon glyphicon-edit\\\"></i></button></td>\\r\\n           <td>{{ unit._unitName }}</td>\\r\\n          <td>{{ unit._unitDescription }}</td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"unitModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\">\\r\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <h3><span class=\\\"label label-default\\\">Item Unit</span></h3>\\r\\n        </div>\\r\\n        <div class=\\\"well\\\">\\r\\n          <div class=\\\"ui grid\\\">\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <label>Name</label>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedModel._unitName\\\" />\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <label>Description</label>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedModel._unitDescription\\\" />\\r\\n              </div>\\r\\n            </div>\\r\\n           \\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"updateUnit()\\\" data-dismiss=\\\"modal\\\" *ngIf=\\\"selectedModel._unitCode != 'New'\\\">\\r\\n          Save changes\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"addUnit()\\\" data-dismiss=\\\"modal\\\" *ngIf=\\\"selectedModel._unitCode === 'New'\\\">\\r\\n          Create New\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/units/units-list.component.html\n// module id = ../../../../../src/app/components/units/units-list.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Unit } from './unit.model';\r\n\r\n\r\n@Component({\r\n    selector: 'units-list',\r\n    templateUrl: './units-list.component.html'\r\n})\r\nexport class UnitComponent implements OnInit{\r\n    public selectedModel: Unit;\r\n    public apiValues: Unit[] = [];\r\n    constructor(private _httpService: HttpClient) { }\r\n    public errMessage: string;\r\n\r\n\r\n    ngOnInit() {\r\n        this.refreshCollectionTypes();\r\n        this.errMessage = '';\r\n    }\r\n\r\n    public searchkey: string;\r\n\r\n    search() {\r\n        const body = JSON.stringify(this.searchkey);\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/Administration/Unit/List', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'),\r\n        }).subscribe(values => {\r\n            this.apiValues = values as Unit[];\r\n        });\r\n    }\r\n\r\n    refreshCollectionTypes()\r\n    {\r\n        this.newSelect();\r\n        const body = JSON.stringify('');\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/Administration/Unit/List', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'),\r\n        }).subscribe(values => {\r\n            this.apiValues = values as Unit[];\r\n        });\r\n    }\r\n    \r\n    searchCollectionTypes(searchkey : string)\r\n    {\r\n        const body = JSON.stringify(searchkey);\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/Administration/Unit/List', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'),\r\n        }).subscribe(values => {\r\n            this.apiValues = values as Unit[];\r\n        });\r\n    }\r\n\r\n    viewThis(model: Unit) {\r\n        this.selectedModel = model;\r\n    }\r\n\r\n    newSelect() {\r\n        this.selectedModel = new Unit();\r\n        this.selectedModel._unitCode = 'New';\r\n        this.selectedModel._unitName = '';\r\n        this.selectedModel._unitDescription = '';\r\n    }\r\n\r\n    updateUnit()\r\n    {\r\n        \r\n        const body = JSON.stringify(this.selectedModel);\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/Administration/Unit/Edit', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'), responseType: 'text'\r\n        }).subscribe(values => {\r\n            if (values != 'OK') {\r\n                this.errMessage = values;\r\n            }\r\n            this.refreshCollectionTypes();\r\n        });\r\n    }\r\n\r\n    addUnit() {\r\n        const body = JSON.stringify(this.selectedModel);\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/Administration/Unit/New', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'), responseType: 'text'\r\n        }).subscribe(values => {\r\n            if (values != 'Ok')\r\n            {\r\n                this.errMessage = values;\r\n            }\r\n           \r\n            this.refreshCollectionTypes();\r\n        });\r\n    }\r\n    \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/units/units-list.component.ts","module.exports = \"\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n    <div class=\\\"input-group\\\">\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"(errMessage != '')\\\">\\r\\n        <div class=\\\"alert alert-warning alert-dismissible\\\" role=\\\"alert\\\">\\r\\n          {{ errMessage }}\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-4 pull-right\\\">\\r\\n    <div class=\\\"input-group\\\">\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchkey\\\" placeholder=\\\"Search for...\\\">\\r\\n      <span class=\\\"input-group-btn\\\">\\r\\n        <button class=\\\"btn btn-primary\\\" onclick=\\\"$('#userAccountModal').modal('show');\\\" (click)=\\\"newSelect()\\\">+</button>\\r\\n\\r\\n        <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"search()\\\">Search!</button>\\r\\n      </span>\\r\\n    </div><!-- /input-group -->\\r\\n  </div><!-- /.col-lg-6 -->\\r\\n \\r\\n</div>\\r\\n<div class=\\\"row\\\" style=\\\"padding: 12px;\\\">\\r\\n    <div class=\\\"col-sm-6 col-md-4\\\"  *ngFor=\\\"let useraccount of apiValues\\\">\\r\\n      <div class=\\\"card\\\" style=\\\"box-shadow: 5px 5px 10px;\\\">\\r\\n        <div class=\\\"caption\\\" style=\\\"background-color: white;height:140px; padding: 12px; border: 1px solid #808080;\\\">\\r\\n          <p style=\\\"font-size: 16px; text-decoration: underline;\\\"><label class=\\\"label label-default\\\">{{ useraccount._lastname }}, {{ useraccount._firstname }}</label></p>\\r\\n          <p style=\\\"font-size: 14px;\\\">Phone: {{ useraccount._phoneNumber}}</p>\\r\\n          <p style=\\\"font-size: 14px;\\\">Address: {{ useraccount._address}}</p>\\r\\n          <div class=\\\"btn-group pull-right\\\" role=\\\"group\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" onclick=\\\"$('#userAccountModal').modal('show');\\\" (click)=\\\"viewThis(useraccount)\\\">Edit</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-warning\\\" (click)=\\\"resetPassword(useraccount)\\\">Reset</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"modal fade\\\" id=\\\"userAccountModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\">\\r\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n     <div class=\\\"modal-body\\\">\\r\\n       <div class=\\\"well\\\">\\r\\n         <div class=\\\"ui grid\\\">\\r\\n           <div>\\r\\n             <div class=\\\"row\\\">\\r\\n               <h3><span class=\\\"label label-default\\\">User Account</span></h3>\\r\\n             </div>\\r\\n             <hr />\\r\\n             <div class=\\\"row\\\">\\r\\n               <h4><span class=\\\"label label-default\\\">User Details</span></h4>\\r\\n             </div>\\r\\n             <div class=\\\"row\\\">\\r\\n               <div class=\\\"col-md-4\\\">\\r\\n                 <label>First Name</label>\\r\\n                 <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedModel._firstname\\\">\\r\\n               </div>\\r\\n               <div class=\\\"col-md-4\\\">\\r\\n                 <label>Middle Name</label>\\r\\n                 <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedModel._middlename\\\">\\r\\n               </div>\\r\\n               <div class=\\\"col-md-4\\\">\\r\\n                 <label>Last Name</label>\\r\\n                 <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedModel._lastname\\\">\\r\\n               </div>\\r\\n             </div>\\r\\n             <div class=\\\"row\\\">\\r\\n               <div class=\\\"col-md-8\\\">\\r\\n                 <label>Address</label>\\r\\n                 <input type=\\\"text\\\" class=\\\"form-control\\\"  [(ngModel)]=\\\"selectedModel._address\\\">\\r\\n               </div>\\r\\n               <div class=\\\"col-md-4\\\">\\r\\n                 <label>Phone No.:</label>\\r\\n                 <input type=\\\"text\\\" class=\\\"form-control\\\"  [(ngModel)]=\\\"selectedModel._phoneNumber\\\">\\r\\n               </div>\\r\\n\\r\\n             </div>\\r\\n           </div>\\r\\n           <hr />\\r\\n           <div class=\\\"row\\\"><h4><span class=\\\"label label-default\\\">Access Control</span></h4></div>\\r\\n           <div class=\\\"row\\\">\\r\\n             <div class=\\\"col-md-4\\\">\\r\\n               <label>User Name</label>\\r\\n               <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedModel._userLogin\\\" *ngIf=\\\"(selectedModel._userAccountID == 'New')\\\">\\r\\n               <input type=\\\"text\\\" class=\\\"form-control\\\"  [(ngModel)]=\\\"selectedModel._userLogin\\\" *ngIf=\\\"(selectedModel._userAccountID != 'New')\\\" readonly>\\r\\n             </div>\\r\\n             <div class=\\\"col-md-4\\\">\\r\\n               <label>User Level</label>\\r\\n               <select class=\\\"form-control\\\" [(ngModel)]=\\\"selectedModel._userLevel\\\">\\r\\n                 <option *ngFor=\\\"let ul of userLevelValues\\\" [ngValue]=\\\"ul._userLevelCode\\\">{{ul._ulDisplayName}}</option>\\r\\n               </select>\\r\\n             </div>\\r\\n             <div class=\\\"col-md-4\\\">\\r\\n               <label>User Status</label>\\r\\n               <select class=\\\"form-control\\\" [(ngModel)]=\\\"selectedModel._userStatus\\\">\\r\\n                 <option *ngFor=\\\"let ustat of userStatusValues\\\" [ngValue]=\\\"ustat._userStatusCode\\\">{{ustat._usDisplay}}</option>\\r\\n               </select>\\r\\n             </div>\\r\\n           </div>\\r\\n           \\r\\n           <div class=\\\"row\\\">\\r\\n             <div class=\\\"col-md-4\\\">\\r\\n               <label>Branch</label>\\r\\n               <select class=\\\"form-control\\\" [(ngModel)]=\\\"selectedModel._userBranch\\\">\\r\\n                 <option *ngFor=\\\"let branch of branchValues\\\" [ngValue]=\\\"branch._branchID\\\">{{branch._branchName}}</option>\\r\\n               </select>\\r\\n\\r\\n             </div>\\r\\n             <div class=\\\"col-md-8\\\" style=\\\"font-size: 10px; padding-top: 10px;\\\">\\r\\n               <div class=\\\"well\\\">\\r\\n                 <div class=\\\"row\\\">\\r\\n                   <label>Transaction Access:</label>\\r\\n                 </div>\\r\\n                 <div class=\\\"row\\\" style=\\\"margin-top: 5px;\\\">\\r\\n                   <div class=\\\" col-md-4\\\"><label>Sea Transaction</label></div>\\r\\n                   <div class=\\\" col-md-8\\\">\\r\\n                     <select class=\\\"form-control\\\" [(ngModel)]=\\\"selectedModel._isSea\\\" >\\r\\n                       <option value=\\\"1\\\">Yes</option>\\r\\n                       <option value=\\\"0\\\">No</option>\\r\\n                     </select>\\r\\n                   </div>\\r\\n                 </div>\\r\\n                 <div class=\\\"row\\\" style=\\\"margin-top: 5px;\\\">\\r\\n                   <div class=\\\" col-md-4\\\"><label>Air Transaction</label></div>\\r\\n                   <div class=\\\"  col-md-8\\\">\\r\\n                     <select class=\\\"form-control\\\" [(ngModel)]=\\\"selectedModel.isAir\\\">\\r\\n                       <option value=\\\"1\\\">Yes</option>\\r\\n                       <option value=\\\"0\\\">No</option>\\r\\n                     </select>\\r\\n                   </div>\\r\\n                 </div>\\r\\n                 <div class=\\\"row\\\" style=\\\"margin-top: 5px;\\\">\\r\\n                   <div class=\\\" col-md-4\\\"><label>Interbranch Transaction</label></div>\\r\\n                   <div class=\\\" col-md-8\\\">\\r\\n                     <select class=\\\"form-control\\\" [(ngModel)]=\\\"selectedModel._isBranch\\\">\\r\\n                       <option value=\\\"1\\\">Yes</option>\\r\\n                       <option value=\\\"0\\\">No</option>\\r\\n                     </select>\\r\\n                   </div>\\r\\n                 </div>\\r\\n               </div>\\r\\n             </div>\\r\\n           </div>\\r\\n\\r\\n         </div>\\r\\n       </div>\\r\\n     </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"updateUserAccount()\\\" data-dismiss=\\\"modal\\\" *ngIf=\\\"selectedModel._userAccountID != 'New'\\\">\\r\\n            Save changes\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"addUserAccount()\\\" data-dismiss=\\\"modal\\\" *ngIf=\\\"selectedModel._userAccountID === 'New'\\\">\\r\\n            Create New User\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/useraccount/useraccount-list.component.html\n// module id = ../../../../../src/app/components/useraccount/useraccount-list.component.html\n// module chunks = main","import { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { UserAccount } from './useraccount.model';\r\nimport { SystemBranch } from '../systembranch/systembranch.model';\r\nimport { UserLevel } from '../userlevel/userlevel.model';\r\nimport { UserStatus } from '../userstatus/userstatus.model';\r\nimport { UserAccess } from './useraccess.model';\r\nimport $ from 'jquery';\r\n\r\n\r\n@Component({\r\n    selector: 'useraccount-type-main',\r\n    templateUrl: './useraccount-list.component.html'\r\n})\r\nexport class UserAccountComponent implements OnInit, AfterViewInit{\r\n    public selectedModel: UserAccount;\r\n    public apiValues: UserAccount[] = [];\r\n    public branchValues: SystemBranch[] = [];\r\n    public userStatusValues: UserStatus[] = [];\r\n    public userLevelValues: UserLevel[] = [];\r\n    public userAccessValues: UserAccess[] = [];\r\n    \r\n\r\n    constructor(private _httpService: HttpClient) { }\r\n    public errMessage: string;\r\n    \r\n    ngOnInit() {\r\n        this.refreshCollectionTypes();\r\n        this.loadCollectionTypes();\r\n        this.newSelect();\r\n        this.errMessage = '';\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        $('.ui.dropdown').dropdown();\r\n    }\r\n\r\n\r\n    public searchkey: string;\r\n\r\n    search()\r\n    {\r\n        const body = JSON.stringify(this.searchkey);\r\n        let header = new HttpHeaders();\r\n\r\n        this._httpService.post('/api/Administration/UserAccount/List', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'),\r\n        }).subscribe(values => {\r\n            this.apiValues = values as UserAccount[];\r\n            console.log(this.apiValues);\r\n        });\r\n    }\r\n\r\n    loadCollectionTypes()\r\n    {\r\n        \r\n        const body = JSON.stringify('');\r\n        let header = new HttpHeaders();\r\n\r\n        this._httpService.post('/api/Administration/SystemBranch/List', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'),\r\n        }).subscribe(values => {\r\n            this.branchValues = values as SystemBranch[];\r\n        });\r\n\r\n        this._httpService.post('/api/Administration/UserLevel/List', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'),\r\n        }).subscribe(values => {\r\n            this.userLevelValues = values as UserLevel[];\r\n        });\r\n\r\n        this._httpService.post('/api/Administration/UserStatus/List', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'),\r\n        }).subscribe(values => {\r\n            this.userStatusValues = values as UserStatus[];\r\n        });\r\n        \r\n    }\r\n\r\n    refreshCollectionTypes()\r\n    {\r\n        const body = JSON.stringify('');\r\n        let header = new HttpHeaders();\r\n        \r\n        this._httpService.post('/api/Administration/UserAccount/List', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'),\r\n        }).subscribe(values => {\r\n            this.apiValues = values as UserAccount[];\r\n            console.log(this.apiValues);\r\n          });\r\n\r\n    }\r\n    \r\n    searchCollectionTypes(searchkey : string)\r\n    {\r\n        const body = JSON.stringify(searchkey);\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/Administration/UserAccount/List', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'),\r\n        }).subscribe(values => {\r\n            this.apiValues = values as UserAccount[];\r\n        });\r\n    }\r\n\r\n    viewThis(model: UserAccount) {\r\n        this.selectedModel = model;\r\n        this.getUserAccess();\r\n    }\r\n\r\n    getUserAccess()\r\n    {\r\n        console.log(this.selectedModel._userAccountID);\r\n        const body = JSON.stringify(this.selectedModel._userAccountID);\r\n        this._httpService.post('/api/Administration/UserAccount/ListAccess', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'),\r\n        }).subscribe(values => {\r\n            this.userAccessValues = values as UserAccess[];\r\n            console.log(values);\r\n        });\r\n    }\r\n\r\n    newSelect()\r\n    {\r\n        this.selectedModel = new UserAccount();\r\n        this.selectedModel._userAccountID = 'New';\r\n        this.selectedModel._firstname = '';\r\n        this.selectedModel._middlename = '';\r\n        this.selectedModel._lastname = '';\r\n        this.selectedModel._address = '';\r\n        this.selectedModel._employeeReference = '';\r\n        this.selectedModel._userLogin = '';\r\n        this.selectedModel._userAccessKey = '';\r\n        this.selectedModel._createdBy = '0';\r\n        this.selectedModel._createdOn = '08/24/2017';\r\n        this.selectedModel._updatedBy = '0';\r\n        this.selectedModel._updatedOn = '08/24/2017';\r\n        this.selectedModel._userLevel = '0';\r\n        this.selectedModel._userStatus = '0';\r\n        this.selectedModel._passwordReset = \"1\";\r\n        this.selectedModel._isAir = '0';\r\n        this.selectedModel._isSea = '0';\r\n        this.selectedModel._isBranch = '0';\r\n        if (this.branchValues.length > 0)\r\n        {\r\n            this.selectedModel._userBranch = this.branchValues[0]._branchID;\r\n\r\n        }\r\n        if (this.userLevelValues.length > 0)\r\n        {\r\n            this.selectedModel._userLevel = this.userLevelValues[0]._userLevelCode;\r\n        }\r\n        if (this.userStatusValues.length > 0)\r\n        {\r\n            this.selectedModel._userStatus = this.userStatusValues[0]._userStatusCode;\r\n        }\r\n       \r\n    }\r\n\r\n    updateUserAccount()\r\n    {\r\n        \r\n        const body = JSON.stringify(this.selectedModel);\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/Administration/UserAccount/Edit', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'),\r\n        }).subscribe(values => {\r\n            this.errMessage = values as string;\r\n            this.refreshCollectionTypes();\r\n        });\r\n    }\r\n\r\n    resetPassword(model : UserAccount) {\r\n        model._passwordReset = \"1\";\r\n        const body = JSON.stringify(model);\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/Administration/UserAccount/Edit', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'), responseType: 'text'\r\n        }).subscribe(values => {\r\n            this.errMessage = values;\r\n            this.refreshCollectionTypes();\r\n        });\r\n    }\r\n\r\n    addUserAccount() {\r\n        const body = JSON.stringify(this.selectedModel);\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/Administration/UserAccount/New', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'), responseType: 'text'\r\n        }).subscribe(values => {\r\n\r\n            this.errMessage = values;\r\n            this.refreshCollectionTypes();\r\n        });\r\n    }\r\n    \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/useraccount/useraccount-list.component.ts","\r\nexport class UserAccount {\r\n    _userAccountID: string;\r\n    _userLevel: string;\r\n    _userBranch: string;\r\n    _userLogin: string;\r\n    _userAccessKey: string;\r\n    _userStatus: string;\r\n    _firstname: string;\r\n    _middlename: string;\r\n    _lastname: string;\r\n    _address: string;\r\n    _createdOn: string;\r\n    _updatedOn: string;\r\n    _createdBy: string;\r\n    _updatedBy: string;\r\n    _employeeReference: string;\r\n    _passwordReset: string;\r\n    _phoneNumber: string;\r\n    _isAir: string;\r\n    _isBranch: string;\r\n    _isSea: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/useraccount/useraccount.model.ts","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n    <div class=\\\"row\\\"><h2><label class=\\\"label label-primary\\\">User Level</label></h2></div>\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"(errMessage != '')\\\">\\r\\n        <div class=\\\"alert alert-warning alert-dismissible\\\" role=\\\"alert\\\">\\r\\n          {{ errMessage }}\\r\\n        </div>\\r\\n      </div>\\r\\n    \\r\\n  </div>\\r\\n  <div class=\\\"col-md-4 pull-right well\\\" style=\\\"margin-right: 10px;margin-left: 10px;\\\">\\r\\n    <div class=\\\"input-group\\\">\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchkey\\\" placeholder=\\\"Search for...\\\">\\r\\n      <span class=\\\"input-group-btn\\\">\\r\\n        <button class=\\\"btn btn-primary\\\" onclick=\\\"$('#userlevelModal').modal('show');\\\" (click)=\\\"newSelect()\\\">+</button>\\r\\n        <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"search()\\\">Search!</button>\\r\\n      </span>\\r\\n    </div>\\r\\n  </div>\\r\\n \\r\\n</div>\\r\\n<hr/>\\r\\n<div class=\\\"well\\\">\\r\\n  <div class=\\\"table-responsive table-striped\\\">\\r\\n    <table class=\\\"table\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th></th>\\r\\n          <th>Name</th>\\r\\n          <th>Description</th>\\r\\n          <th style=\\\"text-align: center;\\\">Administrator</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let userLevel of apiValues\\\">\\r\\n          <td><button (click)=\\\"viewThis(userLevel)\\\" onclick=\\\"$('#userlevelModal').modal('show');\\\"><i class=\\\"glyphicon glyphicon-edit\\\"></i></button></td>\\r\\n          <td>{{ userLevel._ulDisplayName }}</td>\\r\\n          <td>{{userLevel._ulDescription }}</td>\\r\\n          <td style=\\\"text-align: center;\\\"><i *ngIf=\\\"(userLevel._isAdmin == '1')\\\" class=\\\"glyphicon glyphicon-check\\\"></i></td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"userlevelModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\">\\r\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <h3><span class=\\\"label label-default\\\">User Level</span></h3>\\r\\n        </div>\\r\\n        <div class=\\\"well\\\">\\r\\n          <div class=\\\"ui grid\\\">\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n            \\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <label>Name</label>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedModel._ulDisplayName\\\" />\\r\\n                </div>\\r\\n          \\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n            \\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <label>Description</label>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedModel._ulDescription\\\" />\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n            \\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <label>Administrator Rights</label>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <select class=\\\"form-control\\\" [(ngModel)]=\\\"selectedModel._isAdmin\\\">\\r\\n                    <option value=\\\"1\\\">Yes</option>\\r\\n                    <option value=\\\"0\\\">No</option>\\r\\n                  </select>\\r\\n                </div>\\r\\n            </div>\\r\\n          </div>\\r\\n      </div>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"updateUserLevel()\\\" data-dismiss=\\\"modal\\\" *ngIf=\\\"selectedModel._userLevelCode != 'New'\\\">\\r\\n          Save changes\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"addUserLevel()\\\" data-dismiss=\\\"modal\\\" *ngIf=\\\"selectedModel._userLevelCode === 'New'\\\">\\r\\n          Create New\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/userlevel/userlevel-list.component.html\n// module id = ../../../../../src/app/components/userlevel/userlevel-list.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { UserLevel } from './userlevel.model';\r\n\r\n\r\n@Component({\r\n    selector: 'userlevel-type-main',\r\n    templateUrl: './userlevel-list.component.html'\r\n})\r\nexport class UserLevelComponent implements OnInit{\r\n    public selectedModel: UserLevel;\r\n    public apiValues: UserLevel[] = [];\r\n    constructor(private _httpService: HttpClient) { }\r\n    public errMessage: string;\r\n\r\n\r\n    ngOnInit() {\r\n        this.refreshCollectionTypes();\r\n        this.errMessage = '';\r\n    }\r\n    public searchkey: string;\r\n\r\n    search() {\r\n        const body = JSON.stringify(this.searchkey);\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/Administration/UserLevel/List', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'),\r\n        }).subscribe(values => {\r\n            this.apiValues = values as UserLevel[];\r\n        });\r\n    }\r\n\r\n    refreshCollectionTypes()\r\n    {\r\n        this.newSelect();\r\n        const body = JSON.stringify('');\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/Administration/UserLevel/List', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'),\r\n        }).subscribe(values => {\r\n            this.apiValues = values as UserLevel[];\r\n        });\r\n    }\r\n    \r\n    searchCollectionTypes(searchkey : string)\r\n    {\r\n        const body = JSON.stringify(searchkey);\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/Administration/UserLevel/List', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'),\r\n        }).subscribe(values => {\r\n            this.apiValues = values as UserLevel[];\r\n        });\r\n    }\r\n\r\n    viewThis(model: UserLevel) {\r\n        this.selectedModel = model;\r\n    }\r\n\r\n    newSelect()\r\n    {\r\n        this.selectedModel = new UserLevel();\r\n        this.selectedModel._userLevelCode = 'New';\r\n        this.selectedModel._ulDisplayName = '';\r\n        this.selectedModel._ulDescription = '';\r\n        this.selectedModel._isAdmin = '0';\r\n      \r\n    }\r\n\r\n    updateUserLevel()\r\n    {\r\n        \r\n        const body = JSON.stringify(this.selectedModel);\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/Administration/UserLevel/Edit', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'), responseType: 'text'\r\n        }).subscribe(values => {\r\n            if (values != 'Ok')\r\n            {\r\n                this.errMessage = values;\r\n\r\n            }\r\n            this.refreshCollectionTypes();\r\n        });\r\n    }\r\n\r\n    addUserLevel() {\r\n        const body = JSON.stringify(this.selectedModel);\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/Administration/UserLevel/New', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'),responseType: 'text'\r\n        }).subscribe(values => {\r\n            if (values != 'Ok') {\r\n                this.errMessage = values;\r\n\r\n            }\r\n            this.refreshCollectionTypes();\r\n        });\r\n    }\r\n    \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/userlevel/userlevel-list.component.ts","\r\nexport class UserLevel\r\n{\r\n        _userLevelCode: string;\r\n        _ulDescription: string;\r\n        _ulDisplayName: string;\r\n        _isAdmin: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/userlevel/userlevel.model.ts","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-4\\\">\\r\\n      <div class=\\\"row\\\"><h2><label class=\\\"label label-primary\\\">User Status</label></h2></div>\\r\\n      <div class=\\\"row\\\" *ngIf=\\\"(errMessage != '')\\\">\\r\\n        <div class=\\\"alert alert-warning alert-dismissible\\\" role=\\\"alert\\\">\\r\\n          {{ errMessage }}\\r\\n        </div>\\r\\n      </div>\\r\\n    \\r\\n  </div>\\r\\n  <div class=\\\"col-md-4 pull-right well\\\" style=\\\"margin-right: 10px;margin-left: 10px;\\\">\\r\\n    <div class=\\\"input-group\\\">\\r\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchkey\\\" placeholder=\\\"Search for...\\\">\\r\\n      <span class=\\\"input-group-btn\\\">\\r\\n        <button class=\\\"btn btn-primary\\\" onclick=\\\"$('#userstatusModal').modal('show');\\\" (click)=\\\"newSelect()\\\">+</button>\\r\\n        <button class=\\\"btn btn-default\\\" type=\\\"button\\\" (click)=\\\"search()\\\">Search!</button>\\r\\n      </span>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n<hr />\\r\\n<div class=\\\"well\\\">\\r\\n  <div class=\\\"table-responsive table-striped\\\">\\r\\n    <table class=\\\"table\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th></th>\\r\\n          <th>Name</th>\\r\\n          <th>Description</th>\\r\\n          <th style=\\\"text-align: center;\\\">Access Disabled</th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let userStatus of apiValues\\\">\\r\\n          <td><button (click)=\\\"viewThis(userStatus)\\\" onclick=\\\"$('#userstatusModal').modal('show');\\\"><i class=\\\"glyphicon glyphicon-edit\\\"></i></button></td>\\r\\n          <td>{{ userStatus._usDisplay  }}</td>\\r\\n          <td>{{userStatus._usDescription }}</td>\\r\\n          <td style=\\\"text-align: center;\\\"><i *ngIf=\\\"(userStatus._disableFeaturesFlag == '1')\\\" class=\\\"glyphicon glyphicon-check\\\"></i></td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"modal fade\\\" id=\\\"userstatusModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\">\\r\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <h3><span class=\\\"label label-default\\\">User Status</span></h3>\\r\\n        </div>\\r\\n        <div class=\\\"well\\\">\\r\\n          <div class=\\\"ui grid\\\">\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <label>Name</label>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedModel._usDisplay\\\" />\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <label>Description</label>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"selectedModel._usDescription\\\" />\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <label>Disable Access</label>\\r\\n              </div>\\r\\n              <div class=\\\"col-md-6\\\">\\r\\n                <select class=\\\"form-control\\\" [(ngModel)]=\\\"selectedModel._disableFeaturesFlag\\\">\\r\\n                  <option value=\\\"0\\\">No</option>\\r\\n                  <option value=\\\"1\\\">Yes</option>\\r\\n                </select>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" data-dismiss=\\\"modal\\\">Close</button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"updateUserStatus()\\\" data-dismiss=\\\"modal\\\" *ngIf=\\\"selectedModel._userStatusCode != 'New'\\\">\\r\\n          Save changes\\r\\n        </button>\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"addUserStatus()\\\" data-dismiss=\\\"modal\\\" *ngIf=\\\"selectedModel._userStatusCode === 'New'\\\">\\r\\n          Create New\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/userstatus/userstatus-list.component.html\n// module id = ../../../../../src/app/components/userstatus/userstatus-list.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { UserStatus } from '../userstatus/userstatus.model';\r\n\r\n@Component({\r\n    selector: 'userstatus-type-main',\r\n    templateUrl: './userstatus-list.component.html'\r\n})\r\nexport class UserStatusComponent implements OnInit{\r\n    public selectedModel: UserStatus;\r\n    public apiValues: UserStatus[] = [];\r\n    constructor(private _httpService: HttpClient) { }\r\n    public errMessage: string;\r\n\r\n\r\n    ngOnInit() {\r\n        this.refreshCollectionTypes();\r\n        this.errMessage = '';\r\n    }\r\n\r\n    public searchkey: string;\r\n\r\n    search() {\r\n        const body = JSON.stringify(this.searchkey);\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/Administration/UserStatus/List', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'),\r\n        }).subscribe(values => {\r\n            this.apiValues = values as UserStatus[];\r\n        });\r\n    }\r\n\r\n    refreshCollectionTypes()\r\n    {\r\n        this.newSelect();\r\n        const body = JSON.stringify('');\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/Administration/UserStatus/List', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'),\r\n        }).subscribe(values => {\r\n            this.apiValues = values as UserStatus[];\r\n        });\r\n    }\r\n    \r\n    searchCollectionTypes(searchkey : string)\r\n    {\r\n        const body = JSON.stringify(searchkey);\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/Administration/UserStatus/List', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'),\r\n        }).subscribe(values => {\r\n            this.apiValues = values as UserStatus[];\r\n        });\r\n    }\r\n\r\n    viewThis(model: UserStatus) {\r\n        this.selectedModel = model;\r\n    }\r\n\r\n    newSelect()\r\n    {\r\n        this.selectedModel = new UserStatus();\r\n        this.selectedModel._userStatusCode = 'New';\r\n        this.selectedModel._usDisplay = '';\r\n        this.selectedModel._usDescription = '';\r\n        this.selectedModel._disableFeaturesFlag = '0';\r\n      \r\n    }\r\n\r\n    updateUserStatus()\r\n    {\r\n        \r\n        const body = JSON.stringify(this.selectedModel);\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/Administration/UserStatus/Edit', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'), responseType: 'text'\r\n        }).subscribe(values => {\r\n            if (values != 'Ok')\r\n            {\r\n                this.errMessage = values;\r\n            }\r\n            \r\n            this.refreshCollectionTypes();\r\n        });\r\n    }\r\n\r\n    addUserStatus() {\r\n        const body = JSON.stringify(this.selectedModel);\r\n        let header = new HttpHeaders();\r\n        this._httpService.post('/api/Administration/UserStatus/New', body, {\r\n            headers: new HttpHeaders().set('Content-Type', 'application/json; charset=utf-8'), responseType: 'text'\r\n        }).subscribe(values => {\r\n            if (values != 'Ok') {\r\n                this.errMessage = values;\r\n            }\r\n            this.refreshCollectionTypes();\r\n        });\r\n    }\r\n    \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/userstatus/userstatus-list.component.ts","\r\nexport class UserStatus\r\n{\r\n         _userStatusCode: string;\r\n         _usDescription: string;\r\n         _usDisplay: string;\r\n         _disableFeaturesFlag: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/app/components/userstatus/userstatus.model.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Nathan/Documents/Visual Studio 2017/Projects/JCS_ShipmentManagementSystem/JCS_WebApplication/src/main.ts"],"sourceRoot":"webpack:///"}